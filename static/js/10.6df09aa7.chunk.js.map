{"version":3,"sources":["components/Layout.jsx","components/formComponents/MultiSelect.jsx","components/formComponents/Select.jsx","components/formComponents/Input.jsx","context/CalendarContext.jsx","components/calendar/formDefaultValues.js","components/calendar/Create.jsx","components/calendar/EventInTable.jsx","components/calendar/Show.jsx","components/calendar/Edit.jsx","components/calendar/CalendarWrapper.jsx","components/calendar/index.jsx"],"names":["Layout","children","to","aria-label","icon","faCommentAlt","faCalendarAlt","faFileAlt","faCogs","MultiSelect","list","name","optionTitle","label","errors","validatorRef","control","setValue","render","props","Autocomplete","multiple","options","defaultValue","value","getOptionSelected","option","_id","getOptionLabel","onChange","e","values","valuesWithCorrectId","map","item","id","filterSelectedOptions","fullWidth","renderInput","params","TextField","variant","inputRef","error","helperText","message","Select","rules","optionValue","select","target","MenuItem","Input","autoComplete","type","inputLabelProps","as","InputLabelProps","CalendarContext","createContext","CalendarContextProvider","useState","events","setEvents","editOpen","setEditOpen","createOpen","setCreateOpen","detailsOpen","setDetailsOpen","usersList","setUsersList","groups","setGroups","selectedEvent","setSelectedEvent","useSWR","swrCall","onSuccess","refreshInterval","useEffect","callApi","Provider","formDefaultValues","title","start","format","Date","now","end","description","groupId","users","CreateEvent","useContext","AuthContext","url","loading","setLoading","useForm","defaultValues","handleSubmit","register","addCallback","data","prev","toast","success","Dialog","open","onClose","DialogTitle","DialogContent","onSubmit","toISOString","group","required","minLength","shrink","placeholder","DialogActions","Button","onClick","color","EventInTable","event","className","rel","href","username","creator","ShowEvent","user","setEvent","confirmDialog","setConfirmDialog","getEvent","a","deleteEvent","deleteCallback","filter","EditEvent","getEventCallBack","editEvent","editEventCallBack","shouldDirty","shouldValidate","CalendarWrapper","isDesktopOrLaptop","useMediaQuery","minWidth","customButton","custom","text","click","plugins","dayGridPlugin","displayEventEnd","displayEventTime","eventClick","extendedProps","eventTimeFormat","hour","minute","hour12","eventDisplay","initialView","height","customButtons","headerToolbar","center","right","Calendar"],"mappings":"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","file":"static/js/10.6df09aa7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCogs,\r\n  faCommentAlt,\r\n  faCalendarAlt,\r\n  faFileAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../style/layout.css\";\r\n\r\nexport const Layout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/groups\" aria-label=\"groups\">\r\n              <FontAwesomeIcon icon={faCommentAlt} />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/calendar\" aria-label=\"calendar\">\r\n              <FontAwesomeIcon icon={faCalendarAlt} />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/files\" aria-label=\"files\">\r\n              <FontAwesomeIcon icon={faFileAlt} />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/account\" aria-label=\"account\">\r\n              <FontAwesomeIcon icon={faCogs} />\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <main>{children}</main>\r\n    </div>\r\n  );\r\n};\r\n","import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nexport const MultiSelect = ({\r\n  list,\r\n  name,\r\n  optionTitle,\r\n  label,\r\n  errors,\r\n  validatorRef,\r\n  control,\r\n  setValue,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Controller\r\n        name={name}\r\n        control={control}\r\n        render={(props) => (\r\n          <Autocomplete\r\n            multiple\r\n            options={list}\r\n            defaultValue={props.value}\r\n            getOptionSelected={(option, value) => option._id === value._id}\r\n            getOptionLabel={(option) => option[optionTitle]}\r\n            onChange={(e, values) => {\r\n              const valuesWithCorrectId = values.map((item) => {\r\n                if (!item.id && item._id) {\r\n                  item.id = item._id;\r\n                }\r\n                if (!item._id && item.id) {\r\n                  item._id = item.id;\r\n                }\r\n\r\n                return item;\r\n              });\r\n              setValue(name, valuesWithCorrectId);\r\n            }}\r\n            filterSelectedOptions\r\n            fullWidth={true}\r\n            value={props.value}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label={label}\r\n                inputRef={validatorRef}\r\n                error={!!errors[name]}\r\n                helperText={errors[name]?.message}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nexport const Select = ({\r\n  optionTitle,\r\n  errors,\r\n  list,\r\n  label,\r\n  name,\r\n  rules,\r\n  optionValue,\r\n  control,\r\n  setValue,\r\n}) => {\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={rules}\r\n      render={(props) => (\r\n        <TextField\r\n          label={label}\r\n          select\r\n          variant=\"outlined\"\r\n          fullWidth={true}\r\n          defaultValue={props.value}\r\n          value={props.value}\r\n          error={!!errors[name]}\r\n          helperText={errors[name]?.message}\r\n          onChange={(e) => setValue(name, e.target.value)}\r\n        >\r\n          <MenuItem key={\"empty\"} value={\"\"}>\r\n            Empty\r\n          </MenuItem>\r\n          {list.map((option) => (\r\n            <MenuItem key={option[optionValue]} value={option[optionValue]}>\r\n              {option[optionTitle]}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","import { TextField } from \"@material-ui/core\";\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nexport const Input = ({\r\n  name,\r\n  label,\r\n  rules,\r\n  autoComplete,\r\n  errors,\r\n  type,\r\n  inputLabelProps,\r\n  control,\r\n}) => {\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={rules}\r\n      as={\r\n        <TextField\r\n          label={label}\r\n          type={type}\r\n          variant=\"outlined\"\r\n          autoComplete={autoComplete}\r\n          fullWidth={true}\r\n          error={!!errors[name]}\r\n          helperText={errors[name]?.message}\r\n          InputLabelProps={inputLabelProps}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport { swrCall, callApi } from \"helpers/apiCall\";\r\nimport useSWR from \"swr\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nexport const CalendarContext = createContext();\r\n\r\nexport const CalendarContextProvider = ({ children }) => {\r\n  const [events, setEvents] = useState([]);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [createOpen, setCreateOpen] = useState(false);\r\n  const [detailsOpen, setDetailsOpen] = useState(false);\r\n  const [usersList, setUsersList] = useState([]);\r\n  const [groups, setGroups] = useState([]);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n\r\n  useSWR(`/event/list`, swrCall, {\r\n    onSuccess: (e) => setEvents(e),\r\n    refreshInterval: 10000,\r\n  });\r\n\r\n  const getUsers = () => callApi(`/users`, \"GET\", setUsersList);\r\n  const getGroups = () => callApi(`/group/getList`, \"GET\", setGroups);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    getGroups();\r\n    return () => {\r\n      setUsersList([]);\r\n      setGroups([]);\r\n    };\r\n  }, [,]);\r\n\r\n  return (\r\n    <CalendarContext.Provider\r\n      value={{\r\n        events,\r\n        setEvents,\r\n        editOpen,\r\n        setEditOpen,\r\n        createOpen,\r\n        setCreateOpen,\r\n        detailsOpen,\r\n        setDetailsOpen,\r\n        usersList,\r\n        groups,\r\n        selectedEvent,\r\n        setSelectedEvent,\r\n      }}\r\n    >\r\n      {children}\r\n    </CalendarContext.Provider>\r\n  );\r\n};\r\n","import format from \"date-fns/format\";\r\nconst now = format(Date.now(), \"yyyy-MM-dd'T'k:mm\");\r\nexport const formDefaultValues = {\r\n  title: \"\",\r\n  start: now,\r\n  end: \"\",\r\n  description: \"\",\r\n  groupId: \"\",\r\n  users: [],\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Button,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Dialog,\r\n} from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport { MultiSelect } from \"components/formComponents/MultiSelect\";\r\nimport { callApi } from \"helpers/apiCall\";\r\nimport { Select } from \"components/formComponents/Select\";\r\nimport { Input } from \"components/formComponents/Input\";\r\nimport \"style/calendar/calendarForm.css\";\r\nimport { CalendarContext } from \"context/CalendarContext\";\r\nimport { formDefaultValues } from \"components/calendar/formDefaultValues\";\r\n\r\nexport const CreateEvent = () => {\r\n  const {\r\n    setEvents,\r\n    createOpen,\r\n    setCreateOpen,\r\n    groups,\r\n    usersList,\r\n  } = useContext(CalendarContext);\r\n  const { url } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { handleSubmit, errors, register, control, setValue } = useForm({\r\n    defaultValues: formDefaultValues,\r\n  });\r\n\r\n  const addCallback = (data) => {\r\n    setEvents((prev) => [...prev, data]);\r\n    setCreateOpen(false);\r\n    toast.success(\"Success\");\r\n  };\r\n\r\n  const addEvent = ({ title, description, start, end, groupId, users }) => {\r\n    setLoading(true);\r\n    callApi(`/event/create`, \"POST\", addCallback, {\r\n      title,\r\n      description,\r\n      start: new Date(start).toISOString(),\r\n      end: end ? new Date(end).toISOString() : null,\r\n      group: groupId ? groupId : null,\r\n      users: users ? users.map((item) => item.id) : [],\r\n    });\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={createOpen}\r\n      onClose={() => {\r\n        setCreateOpen(false);\r\n      }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Create Event</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(addEvent)}>\r\n          <Input\r\n            name=\"title\"\r\n            control={control}\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            errors={errors}\r\n            rules={{\r\n              required: \"Required\",\r\n              minLength: {\r\n                value: 5,\r\n                message: \"Min length is 5\",\r\n              },\r\n            }}\r\n          />\r\n          <Input\r\n            name=\"description\"\r\n            control={control}\r\n            type=\"text\"\r\n            label=\"Description\"\r\n            errors={errors}\r\n            rules={{\r\n              required: false,\r\n            }}\r\n          />\r\n          <Input\r\n            name=\"start\"\r\n            control={control}\r\n            type=\"datetime-local\"\r\n            label=\"*Begin date\"\r\n            errors={errors}\r\n            rules={{\r\n              required: \"Required\",\r\n            }}\r\n          />\r\n          <Input\r\n            name=\"end\"\r\n            control={control}\r\n            type=\"datetime-local\"\r\n            label=\"End date\"\r\n            errors={errors}\r\n            rules={{\r\n              required: false,\r\n            }}\r\n            inputLabelProps={{ shrink: true }}\r\n          />\r\n\r\n          <Select\r\n            list={groups}\r\n            optionTitle=\"name\"\r\n            label=\"select group\"\r\n            errors={errors}\r\n            rules={{\r\n              required: false,\r\n            }}\r\n            name=\"groupId\"\r\n            optionValue=\"_id\"\r\n            control={control}\r\n            setValue={setValue}\r\n          />\r\n          <MultiSelect\r\n            list={usersList}\r\n            optionTitle=\"username\"\r\n            label=\"select users\"\r\n            placeholder=\"select users\"\r\n            errors={errors}\r\n            name=\"users\"\r\n            validatorRef={register({\r\n              required: false,\r\n            })}\r\n            control={control}\r\n            setValue={setValue}\r\n          />\r\n\r\n          <DialogActions>\r\n            <Button onClick={() => setCreateOpen(false)} color=\"primary\">\r\n              Close\r\n            </Button>\r\n\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Create {loading ? \"...\" : null}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import format from \"date-fns/format\";\r\nimport \"style/calendar/eventInTable.css\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\n\r\nexport const EventInTable = ({ event }) => {\r\n  return (\r\n    <div className=\"event-container\">\r\n      <div>\r\n        <span>Title</span>\r\n        {event.title && <span>{event.title}</span>}\r\n      </div>\r\n      <div>\r\n        <span>Description</span>\r\n        {event.description && <span>{event?.description}</span>}\r\n      </div>\r\n      <div>\r\n        <span>Begin</span>\r\n        {event.start && (\r\n          <span>{format(new Date(event.start), \"kk:mm dd.MM.uu\")}</span>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <span>End</span>\r\n        {event.end && (\r\n          <span>{format(new Date(event.end), \"kk:mm dd.MM.uu\")}</span>\r\n        )}\r\n      </div>\r\n      <div className=\"group\">\r\n        <span>Group Video Call</span>\r\n        {event.group && <span>{event.group?.name}</span>}\r\n        {event.group?._id && (\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={`/videoCall/${event.group._id}`}\r\n          >\r\n            <VideocamIcon />\r\n          </a>\r\n        )}\r\n      </div>\r\n      <div className=\"users\">\r\n        <span>Users</span>\r\n        <div>\r\n          {event.users &&\r\n            event.users?.map((item) => (\r\n              <span key={item?._id}>{item?.username}</span>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <span>Creator</span>\r\n        {event.creator && <span>{event.creator?.username}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport {\r\n  Button,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Dialog,\r\n} from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport { callApi } from \"helpers/apiCall\";\r\nimport { EventInTable } from \"components/calendar/EventInTable\";\r\nimport \"style/calendar/calendarForm.css\";\r\nimport { CalendarContext } from \"context/CalendarContext\";\r\n\r\nexport const ShowEvent = () => {\r\n  const {\r\n    setEvents,\r\n    setEditOpen,\r\n    selectedEvent,\r\n    setSelectedEvent,\r\n    detailsOpen,\r\n    setDetailsOpen,\r\n  } = useContext(CalendarContext);\r\n  const { user } = useContext(AuthContext);\r\n  const [event, setEvent] = useState(null);\r\n  const [confirmDialog, setConfirmDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedEvent) {\r\n      getEvent(selectedEvent);\r\n    }\r\n  }, [selectedEvent, detailsOpen]);\r\n\r\n  const getEvent = async (id) => callApi(`/event/get/${id}`, \"GET\", setEvent);\r\n\r\n  const deleteEvent = async () => {\r\n    if (!event?._id || user?.id !== event?.creator?._id) {\r\n      return;\r\n    }\r\n    callApi(`/event/delete/${event._id}`, \"DELETE\", deleteCallback);\r\n  };\r\n\r\n  const deleteCallback = () => {\r\n    setEvents((prev) => prev.filter((item) => item._id !== event._id));\r\n    setSelectedEvent(null);\r\n    toast.success(\"Success\");\r\n    setConfirmDialog(false);\r\n    setDetailsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={detailsOpen}\r\n        onClose={() => setDetailsOpen(false)}\r\n        fullWidth\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Details Event</DialogTitle>\r\n        <DialogContent>{event && <EventInTable event={event} />}</DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDetailsOpen(false)} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          {user?.id === event?.creator?._id ? (\r\n            <>\r\n              <Button color=\"primary\" onClick={() => setEditOpen(true)}>\r\n                Edit\r\n              </Button>\r\n              <Button color=\"primary\" onClick={() => setConfirmDialog(true)}>\r\n                Delete\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={confirmDialog}\r\n        onClose={() => setConfirmDialog(false)}\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Are you sure?</DialogTitle>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={deleteEvent}>\r\n            Delete\r\n          </Button>\r\n          <Button color=\"primary\" onClick={() => setConfirmDialog(false)}>\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Button,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Dialog,\r\n} from \"@material-ui/core\";\r\nimport { MultiSelect } from \"components/formComponents/MultiSelect\";\r\nimport { callApi } from \"helpers/apiCall\";\r\nimport format from \"date-fns/format\";\r\nimport { Select } from \"components/formComponents/Select\";\r\nimport { Input } from \"components/formComponents/Input\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"style/calendar/calendarForm.css\";\r\nimport { CalendarContext } from \"context/CalendarContext\";\r\nimport { formDefaultValues } from \"components/calendar/formDefaultValues\";\r\n\r\nexport const EditEvent = () => {\r\n  const {\r\n    setEvents,\r\n    editOpen,\r\n    setEditOpen,\r\n    setDetailsOpen,\r\n    selectedEvent,\r\n    setSelectedEvent,\r\n    usersList,\r\n    groups,\r\n  } = useContext(CalendarContext);\r\n  const { url } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { handleSubmit, errors, register, control, setValue } = useForm({\r\n    defaultValues: formDefaultValues,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectedEvent) {\r\n      getEvent(selectedEvent);\r\n    }\r\n  }, [selectedEvent, editOpen]);\r\n\r\n  const getEvent = async (id) =>\r\n    callApi(`/event/get/${id}`, \"GET\", getEventCallBack);\r\n\r\n  const editEvent = async (props) => {\r\n    const { title, description, start, end, groupId, users } = props;\r\n    setLoading(true);\r\n\r\n    callApi(`/event/edit`, \"POST\", editEventCallBack, {\r\n      id: selectedEvent,\r\n      title,\r\n      description,\r\n      start: new Date(start).toISOString(),\r\n      end: end ? new Date(end).toISOString() : null,\r\n      group: groupId ? groupId : null,\r\n      users: users ? users.map((item) => item._id) : [],\r\n    });\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getEventCallBack = ({\r\n    title,\r\n    description,\r\n    start,\r\n    end,\r\n    users,\r\n    group,\r\n  }) => {\r\n    setValue(\"title\", title, { shouldDirty: true, shouldValidate: true });\r\n    setValue(\"description\", description);\r\n    setValue(\"start\", format(new Date(start), \"yyyy-MM-dd'T'k:mm\"));\r\n    setValue(\"end\", end ? format(new Date(end), \"yyyy-MM-dd'T'k:mm\") : \"\");\r\n    setValue(\"users\", users ? users : []);\r\n    setValue(\"groupId\", group ? group._id : \"\");\r\n  };\r\n\r\n  const editEventCallBack = (data) => {\r\n    setEvents((prev) =>\r\n      prev.map((item) => {\r\n        if (item._id === data._id) {\r\n          item = data;\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n    setSelectedEvent(null);\r\n    setEditOpen(false);\r\n    setDetailsOpen(false);\r\n    toast.success(\"Success\");\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={editOpen}\r\n      onClose={() => {\r\n        setEditOpen(false);\r\n        setSelectedEvent(null);\r\n      }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Edit Event</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(editEvent)}>\r\n          <Input\r\n            name=\"title\"\r\n            control={control}\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            errors={errors}\r\n            rules={{\r\n              required: \"Required\",\r\n              minLength: {\r\n                value: 5,\r\n                message: \"Min length is 5\",\r\n              },\r\n            }}\r\n          />\r\n          <Input\r\n            name=\"description\"\r\n            control={control}\r\n            type=\"text\"\r\n            label=\"Description\"\r\n            errors={errors}\r\n            rules={{\r\n              required: false,\r\n            }}\r\n          />\r\n          <Input\r\n            name=\"start\"\r\n            control={control}\r\n            type=\"datetime-local\"\r\n            label=\"*Begin date\"\r\n            errors={errors}\r\n            rules={{\r\n              required: \"Required\",\r\n            }}\r\n          />\r\n          <Input\r\n            name=\"end\"\r\n            control={control}\r\n            type=\"datetime-local\"\r\n            label=\"End date\"\r\n            errors={errors}\r\n            rules={{\r\n              required: false,\r\n            }}\r\n            inputLabelProps={{ shrink: true }}\r\n          />\r\n\r\n          <Select\r\n            list={groups}\r\n            optionTitle=\"name\"\r\n            label=\"select group\"\r\n            errors={errors}\r\n            rules={{\r\n              required: false,\r\n            }}\r\n            name=\"groupId\"\r\n            optionValue=\"_id\"\r\n            control={control}\r\n            setValue={setValue}\r\n          />\r\n          <MultiSelect\r\n            list={usersList}\r\n            optionTitle=\"username\"\r\n            label=\"select users\"\r\n            placeholder=\"select users\"\r\n            errors={errors}\r\n            name=\"users\"\r\n            validatorRef={register({\r\n              required: false,\r\n            })}\r\n            control={control}\r\n            setValue={setValue}\r\n          />\r\n\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                setEditOpen(false);\r\n                setSelectedEvent(null);\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              Close\r\n            </Button>\r\n\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Edit {loading ? \"...\" : null}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Layout } from \"components/Layout\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport { CreateEvent } from \"components/calendar/Create\";\r\nimport { ShowEvent } from \"components/calendar/Show\";\r\nimport { EditEvent } from \"components/calendar/Edit\";\r\nimport { CalendarContext } from \"context/CalendarContext\";\r\nimport \"style/calendar/calendar.css\";\r\n\r\nexport const CalendarWrapper = () => {\r\n  const {\r\n    events,\r\n    setCreateOpen,\r\n    setSelectedEvent,\r\n    setDetailsOpen,\r\n  } = useContext(CalendarContext);\r\n  const isDesktopOrLaptop = useMediaQuery({ minWidth: 800 });\r\n\r\n  const customButton = {\r\n    custom: {\r\n      text: \"Add event\",\r\n      click: () => setCreateOpen(true),\r\n    },\r\n  };\r\n\r\n  const onClickEvent = (e) => {\r\n    setSelectedEvent(e.event.extendedProps._id);\r\n    setDetailsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div id=\"calendar\">\r\n        <FullCalendar\r\n          plugins={[dayGridPlugin]}\r\n          displayEventEnd={true}\r\n          displayEventTime={true}\r\n          eventClick={onClickEvent}\r\n          eventTimeFormat={{\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            hour12: false,\r\n          }}\r\n          eventDisplay={\"block\"}\r\n          initialView={isDesktopOrLaptop ? \"dayGridMonth\" : \"dayGridDay\"}\r\n          height=\"90vh\"\r\n          customButtons={customButton}\r\n          headerToolbar={{\r\n            center: \"custom\",\r\n            right: \"prev,next,today,dayGridDay,dayGridWeek,dayGridMonth\",\r\n          }}\r\n          events={events}\r\n        />\r\n      </div>\r\n\r\n      <CreateEvent />\r\n      <ShowEvent />\r\n      <EditEvent />\r\n    </Layout>\r\n  );\r\n};\r\n","import { CalendarWrapper } from \"components/calendar/CalendarWrapper\";\r\nimport { CalendarContextProvider } from \"context/CalendarContext\";\r\n\r\nconst Calendar = () => {\r\n  return (\r\n    <CalendarContextProvider>\r\n      <CalendarWrapper />\r\n    </CalendarContextProvider>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"sourceRoot":""}