{"version":3,"sources":["components/Layout.jsx","components/Home.jsx","context/AuthContext.jsx","components/formComponents/MultiSelect.jsx","helpers/downloadBlob.js","config.js","helpers/apiCall.js","components/formComponents/Select.jsx","components/formComponents/Input.jsx","context/CalendarContext.jsx","components/calendar/formDefaultValues.js","components/calendar/Create.jsx","components/calendar/EventInTable.jsx","components/calendar/Show.jsx","components/calendar/Edit.jsx","components/calendar/CalendarWrapper.jsx","components/calendar/index.jsx","components/files/columns.js","components/files/UploadDialog.jsx","components/files/index.jsx","components/account/CreateAccount.jsx","components/account/ResetPassword.jsx","components/account/Account.jsx","components/Login.jsx","components/Logout.jsx","context/GroupContext.jsx","context/GroupListContext.jsx","components/groups/CreateGroup.jsx","components/groups/chat/desktop/GroupList.jsx","components/groups/chat/Message.jsx","components/Toast.jsx","components/groups/chat/desktop/Chat.jsx","components/groups/chat/desktop/index.jsx","components/groups/chat/mobile/GroupList.jsx","components/groups/chat/mobile/Chat.jsx","components/groups/chat/mobile/index.jsx","components/groups/index.jsx","context/VideoCallContext.jsx","components/groups/videoCall/Video.jsx","components/groups/videoCall/VideoCall.jsx","components/Spinner.jsx","components/PrivateRoute.jsx","hooks/useAuth.jsx","components/IncommingCall.jsx","App.jsx","style/theme.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Layout","children","to","icon","faCommentAlt","faCalendarAlt","faFileAlt","faCogs","Home","AuthContext","createContext","AuthContextProvider","useState","theme","setThemeValue","user","setUser","socket","io","useEffect","initialTheme","localStorage","getItem","Provider","value","setTheme","setItem","url","MultiSelect","list","name","optionTitle","label","errors","validatorRef","control","setValue","render","props","Autocomplete","multiple","options","defaultValue","getOptionSelected","option","_id","getOptionLabel","onChange","e","values","valuesWithCorrectId","map","item","id","filterSelectedOptions","fullWidth","renderInput","params","TextField","variant","inputRef","error","helperText","message","downloadBlob","data","blob","Blob","type","window","navigator","msSaveBlob","blobObject","link","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","config","callApi","method","callBack","a","headers","token","Cookies","axios","Authorization","withCredentials","res","toast","console","response","statusText","authCall","swrCall","apiDownload","responseType","Select","rules","optionValue","select","target","MenuItem","Input","autoComplete","inputLabelProps","as","InputLabelProps","CalendarContext","CalendarContextProvider","events","setEvents","editOpen","setEditOpen","createOpen","setCreateOpen","detailsOpen","setDetailsOpen","usersList","setUsersList","groups","setGroups","selectedEvent","setSelectedEvent","useSWR","onSuccess","refreshInterval","formDefaultValues","title","start","format","Date","now","end","description","groupId","users","CreateEvent","useContext","loading","setLoading","useForm","defaultValues","handleSubmit","register","addCallback","prev","success","Dialog","open","onClose","DialogTitle","DialogContent","onSubmit","toISOString","group","required","minLength","shrink","placeholder","DialogActions","Button","onClick","color","EventInTable","event","className","rel","username","creator","ShowEvent","setEvent","confirmDialog","setConfirmDialog","getEvent","deleteEvent","deleteCallback","filter","EditEvent","getEventCallBack","editEvent","editEventCallBack","shouldDirty","shouldValidate","CalendarWrapper","isDesktopOrLaptop","useMediaQuery","minWidth","customButton","custom","text","plugins","dayGridPlugin","displayEventEnd","displayEventTime","eventClick","extendedProps","eventTimeFormat","hour","minute","hour12","eventDisplay","initialView","height","customButtons","headerToolbar","center","right","Calendar","columns","field","headerName","hide","flex","valueGetter","element","parseInt","toFixed","UploadDialog","setOpen","fileRef","upload","ref","Files","selection","setSelection","files","setFiles","useRef","uploadCallback","ids","includes","length","autoHeight","onSelectionModelChange","selectionModel","rows","pageSize","checkboxSelection","pagination","FormData","append","current","CreateAccount","mode","shouldUnregister","setMessage","role","setRole","addUser","email","password","status","style","width","Box","py","Typography","component","pattern","FormControl","InputLabel","htmlFor","selected","Alert","severity","ResetPassword","resetPassword","oldPassword","newPassword","Account","history","useHistory","display","flexDirection","alignItems","p","flexWrap","justifyContent","m","FormControlLabel","Switch","checked","push","ml","faSignOutAlt","Login","setEmail","setPassword","JSON","stringify","expires","faLock","Logout","faHamburger","GroupContext","GroupContextProvider","groupMobile","setGroupMobile","groupDesktop","setGroupDesktop","desktopInitScroll","setDesktopInitScroll","GroupListContext","GroupListContextProvider","groupList","setGroupList","searchingPhrase","setSearchingPhrase","isSearching","setIsSearching","searchGroup","phrase","result","CreateGroup","setUsers","setName","allUsers","setAllUsers","getAllUsers","createGroup","userIds","createCallback","notSeenMessages","DialogContentText","GroupList","size","InputProps","endAdornment","fontSize","Badge","max","badgeContent","anchorOrigin","vertical","horizontal","Avatar","Message","groupUsers","setGroupUsers","seenUsers","seen","iconsMarkAsSeen","Tooltip","enterTouchDelay","placement","createDate","toLocaleString","Toast","closeAction","Snackbar","IconButton","aria-label","Chat","setSocket","setError","messages","setMessages","typing","setTyping","seenMessages","setSeenMessages","divRef","connect","path","emit","on","allMessages","typingUser","find","updateTypingUsers","scrollIntoView","behavior","handleTyping","onScroll","x","multiline","onBlur","onFocus","cursor","GroupsDesktop","initScroll","setInitScroll","log","fullScreen","edge","GroupsMobile","Groups","VideoCallContext","VideoCallContextProvider","isConnectionSet","setIsConnectionSet","incommingCall","setIncommingCall","Video","peer","stream","srcObject","playsInline","autoPlay","VideoCall","peers","setPeers","audio","setAudio","isMuted","setIsMuted","userVideo","peersRef","useParams","mediaDevices","getUserMedia","video","then","microphone","getAudioTracks","enabled","callUSers","peersToSet","forEach","userInGroup","createPeer","socketId","peerID","payload","addPeer","signal","callerID","prevPeers","catch","disconnectedPeer","destroy","currentPeers","setTimeout","userToSignal","Peer","initiator","trickle","incomingSignal","close","Spinner","CircularProgress","PrivateRoute","Component","rest","checkToken","cookieUser","initialUser","parse","useAuth","IncommingCall","App","currentTheme","createMuiTheme","palette","overrides","MuiList","root","listStyle","ThemeProvider","CssBaseline","exact","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","process","origin","addEventListener","fetch","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.aa94fc78.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCogs,\r\n  faCommentAlt,\r\n  faCalendarAlt,\r\n  faFileAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../style/layout.css\";\r\n\r\nexport const Layout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/groups\">\r\n              <FontAwesomeIcon icon={faCommentAlt} />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/calendar\">\r\n              <FontAwesomeIcon icon={faCalendarAlt} />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/files\">\r\n              <FontAwesomeIcon icon={faFileAlt} />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/account\">\r\n              <FontAwesomeIcon icon={faCogs} />\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <main>{children}</main>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"./Layout\";\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <Layout>\r\n      <h1>Home</h1>\r\n    </Layout>\r\n  );\r\n};\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const ENDPOINT = \"http://localhost:4001\";\r\n\r\n  const [theme, setThemeValue] = useState(\"light\");\r\n  const [user, setUser] = useState(null);\r\n  const socket = io(ENDPOINT);\r\n  const setTheme = (value) => {\r\n    localStorage.setItem(\"theme\", value);\r\n    setThemeValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initialTheme = localStorage.getItem(\"theme\");\r\n    if (initialTheme) {\r\n      setThemeValue(initialTheme);\r\n    }\r\n  }, [,]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        theme,\r\n        setTheme,\r\n        user,\r\n        setUser,\r\n        socket,\r\n        url: \"http://localhost:4000\",\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nexport const MultiSelect = ({\r\n  list,\r\n  name,\r\n  optionTitle,\r\n  label,\r\n  errors,\r\n  validatorRef,\r\n  control,\r\n  setValue,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Controller\r\n        name={name}\r\n        control={control}\r\n        render={(props) => (\r\n          <Autocomplete\r\n            multiple\r\n            options={list}\r\n            defaultValue={props.value}\r\n            getOptionSelected={(option, value) => option._id === value._id}\r\n            getOptionLabel={(option) => option[optionTitle]}\r\n            onChange={(e, values) => {\r\n              const valuesWithCorrectId = values.map((item) => {\r\n                if (!item.id && item._id) {\r\n                  item.id = item._id;\r\n                }\r\n                if (!item._id && item.id) {\r\n                  item._id = item.id;\r\n                }\r\n\r\n                return item;\r\n              });\r\n              setValue(name, valuesWithCorrectId);\r\n            }}\r\n            filterSelectedOptions\r\n            fullWidth={true}\r\n            value={props.value}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label={label}\r\n                inputRef={validatorRef}\r\n                error={!!errors[name]}\r\n                helperText={errors[name]?.message}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","export const downloadBlob = (data) => {\r\n  var blob = new Blob([data], { type: data.type });\r\n  if (typeof window.navigator.msSaveBlob === \"function\") {\r\n    // If it is IE that support download blob directly.\r\n    window.navigator.msSaveBlob(data, \"file\");\r\n  } else {\r\n    var blobObject = blob;\r\n    var link = document.createElement(\"a\");\r\n    link.href = window.URL.createObjectURL(blobObject);\r\n    link.download = \"file\";\r\n\r\n    document.body.appendChild(link);\r\n\r\n    link.click();\r\n  }\r\n};\r\n","export const config = {\r\n  apiUrl: \"https://vps.franciszekpawlak.pl:17200\",\r\n  chatSocektUrl: \"https://vps.franciszekpawlak.pl:17300\",\r\n  videoSocketUlr: \"https://vps.franciszekpawlak.pl:17400\",\r\n};\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { downloadBlob } from \"helpers/downloadBlob\";\r\nimport { config } from \"config\";\r\nimport * as Cookies from \"js-cookie\";\r\n\r\nexport const callApi = async (\r\n  url,\r\n  method,\r\n  callBack,\r\n  body,\r\n  headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  }\r\n) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    const res = await axios({\r\n      method: method,\r\n      url: `${config.apiUrl}${url}`,\r\n      headers: { ...headers, Authorization: token },\r\n      data: body,\r\n      withCredentials: true,\r\n    });\r\n    if (res.data) {\r\n      callBack(res.data);\r\n    } else {\r\n      toast.error(\"Invalid data\");\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    toast.error(err?.response?.statusText);\r\n  }\r\n};\r\n\r\nexport const authCall = async (url, method = \"GET\", body = null) => {\r\n  const token = Cookies.get(\"token\");\r\n\r\n  const res = await axios({\r\n    method: method,\r\n    url: `${config.apiUrl}${url}`,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: token,\r\n    },\r\n    data: body,\r\n    withCredentials: true,\r\n  });\r\n  return res;\r\n};\r\n\r\nexport const swrCall = async (url) => {\r\n  const token = Cookies.get(\"token\");\r\n\r\n  const res = await axios({\r\n    url: `${config.apiUrl}${url}`,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: token,\r\n    },\r\n    withCredentials: true,\r\n  });\r\n  return res.data;\r\n};\r\n\r\nexport const apiDownload = async (url, data) => {\r\n  const token = Cookies.get(\"token\");\r\n\r\n  try {\r\n    const res = await axios({\r\n      url: `${config.apiUrl}${url}`,\r\n      method: \"POST\",\r\n      data: data,\r\n      withCredentials: true,\r\n      responseType: \"blob\",\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n    downloadBlob(res.data);\r\n  } catch (err) {\r\n    toast.error(err?.response?.statusText);\r\n  }\r\n};\r\n","import TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nexport const Select = ({\r\n  optionTitle,\r\n  errors,\r\n  list,\r\n  label,\r\n  name,\r\n  rules,\r\n  optionValue,\r\n  control,\r\n  setValue,\r\n}) => {\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={rules}\r\n      render={(props) => (\r\n        <TextField\r\n          label={label}\r\n          select\r\n          variant=\"outlined\"\r\n          fullWidth={true}\r\n          defaultValue={props.value}\r\n          value={props.value}\r\n          error={!!errors[name]}\r\n          helperText={errors[name]?.message}\r\n          onChange={(e) => setValue(name, e.target.value)}\r\n        >\r\n          <MenuItem key={\"empty\"} value={\"\"}>\r\n            Empty\r\n          </MenuItem>\r\n          {list.map((option) => (\r\n            <MenuItem key={option[optionValue]} value={option[optionValue]}>\r\n              {option[optionTitle]}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","import { TextField } from \"@material-ui/core\";\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nexport const Input = ({\r\n  name,\r\n  label,\r\n  rules,\r\n  autoComplete,\r\n  errors,\r\n  type,\r\n  inputLabelProps,\r\n  control,\r\n}) => {\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={rules}\r\n      as={\r\n        <TextField\r\n          label={label}\r\n          type={type}\r\n          variant=\"outlined\"\r\n          autoComplete={autoComplete}\r\n          fullWidth={true}\r\n          error={!!errors[name]}\r\n          helperText={errors[name]?.message}\r\n          InputLabelProps={inputLabelProps}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport { swrCall, callApi } from \"helpers/apiCall\";\r\nimport useSWR from \"swr\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nexport const CalendarContext = createContext();\r\n\r\nexport const CalendarContextProvider = ({ children }) => {\r\n  const [events, setEvents] = useState([]);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [createOpen, setCreateOpen] = useState(false);\r\n  const [detailsOpen, setDetailsOpen] = useState(false);\r\n  const [usersList, setUsersList] = useState([]);\r\n  const [groups, setGroups] = useState([]);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n\r\n  useSWR(`/event/list`, swrCall, {\r\n    onSuccess: (e) => setEvents(e),\r\n    refreshInterval: 10000,\r\n  });\r\n\r\n  const getUsers = () => callApi(`/users`, \"GET\", setUsersList);\r\n  const getGroups = () => callApi(`/group/getList`, \"GET\", setGroups);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    getGroups();\r\n    return () => {\r\n      setUsersList([]);\r\n      setGroups([]);\r\n    };\r\n  }, [,]);\r\n\r\n  return (\r\n    <CalendarContext.Provider\r\n      value={{\r\n        events,\r\n        setEvents,\r\n        editOpen,\r\n        setEditOpen,\r\n        createOpen,\r\n        setCreateOpen,\r\n        detailsOpen,\r\n        setDetailsOpen,\r\n        usersList,\r\n        groups,\r\n        selectedEvent,\r\n        setSelectedEvent,\r\n      }}\r\n    >\r\n      {children}\r\n    </CalendarContext.Provider>\r\n  );\r\n};\r\n","import format from \"date-fns/format\";\r\nconst now = format(Date.now(), \"yyyy-MM-dd'T'k:mm\");\r\nexport const formDefaultValues = {\r\n  title: \"\",\r\n  start: now,\r\n  end: \"\",\r\n  description: \"\",\r\n  groupId: \"\",\r\n  users: [],\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Button,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Dialog,\r\n} from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport { MultiSelect } from \"components/formComponents/MultiSelect\";\r\nimport { callApi } from \"helpers/apiCall\";\r\nimport { Select } from \"components/formComponents/Select\";\r\nimport { Input } from \"components/formComponents/Input\";\r\nimport \"style/calendar/calendarForm.css\";\r\nimport { CalendarContext } from \"context/CalendarContext\";\r\nimport { formDefaultValues } from \"components/calendar/formDefaultValues\";\r\n\r\nexport const CreateEvent = () => {\r\n  const {\r\n    setEvents,\r\n    createOpen,\r\n    setCreateOpen,\r\n    groups,\r\n    usersList,\r\n  } = useContext(CalendarContext);\r\n  const { url } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { handleSubmit, errors, register, control, setValue } = useForm({\r\n    defaultValues: formDefaultValues,\r\n  });\r\n\r\n  const addCallback = (data) => {\r\n    setEvents((prev) => [...prev, data]);\r\n    setCreateOpen(false);\r\n    toast.success(\"Success\");\r\n  };\r\n\r\n  const addEvent = ({ title, description, start, end, groupId, users }) => {\r\n    setLoading(true);\r\n    callApi(`/event/create`, \"POST\", addCallback, {\r\n      title,\r\n      description,\r\n      start: new Date(start).toISOString(),\r\n      end: end ? new Date(end).toISOString() : null,\r\n      group: groupId ? groupId : null,\r\n      users: users ? users.map((item) => item.id) : [],\r\n    });\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={createOpen}\r\n      onClose={() => {\r\n        setCreateOpen(false);\r\n      }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Create Event</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(addEvent)}>\r\n          <Input\r\n            name=\"title\"\r\n            control={control}\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            errors={errors}\r\n            rules={{\r\n              required: \"Required\",\r\n              minLength: {\r\n                value: 5,\r\n                message: \"Min length is 5\",\r\n              },\r\n            }}\r\n          />\r\n          <Input\r\n            name=\"description\"\r\n            control={control}\r\n            type=\"text\"\r\n            label=\"Description\"\r\n            errors={errors}\r\n            rules={{\r\n              required: false,\r\n            }}\r\n          />\r\n          <Input\r\n            name=\"start\"\r\n            control={control}\r\n            type=\"datetime-local\"\r\n            label=\"*Begin date\"\r\n            errors={errors}\r\n            rules={{\r\n              required: \"Required\",\r\n            }}\r\n          />\r\n          <Input\r\n            name=\"end\"\r\n            control={control}\r\n            type=\"datetime-local\"\r\n            label=\"End date\"\r\n            errors={errors}\r\n            rules={{\r\n              required: false,\r\n            }}\r\n            inputLabelProps={{ shrink: true }}\r\n          />\r\n\r\n          <Select\r\n            list={groups}\r\n            optionTitle=\"name\"\r\n            label=\"select group\"\r\n            errors={errors}\r\n            rules={{\r\n              required: false,\r\n            }}\r\n            name=\"groupId\"\r\n            optionValue=\"_id\"\r\n            control={control}\r\n            setValue={setValue}\r\n          />\r\n          <MultiSelect\r\n            list={usersList}\r\n            optionTitle=\"username\"\r\n            label=\"select users\"\r\n            placeholder=\"select users\"\r\n            errors={errors}\r\n            name=\"users\"\r\n            validatorRef={register({\r\n              required: false,\r\n            })}\r\n            control={control}\r\n            setValue={setValue}\r\n          />\r\n\r\n          <DialogActions>\r\n            <Button onClick={() => setCreateOpen(false)} color=\"primary\">\r\n              Close\r\n            </Button>\r\n\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Create {loading ? \"...\" : null}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import format from \"date-fns/format\";\r\nimport \"style/calendar/eventInTable.css\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\n\r\nexport const EventInTable = ({ event }) => {\r\n  return (\r\n    <div className=\"event-container\">\r\n      <div>\r\n        <span>Title</span>\r\n        {event.title && <span>{event.title}</span>}\r\n      </div>\r\n      <div>\r\n        <span>Description</span>\r\n        {event.description && <span>{event?.description}</span>}\r\n      </div>\r\n      <div>\r\n        <span>Begin</span>\r\n        {event.start && (\r\n          <span>{format(new Date(event.start), \"kk:mm dd.MM.uu\")}</span>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <span>End</span>\r\n        {event.end && (\r\n          <span>{format(new Date(event.end), \"kk:mm dd.MM.uu\")}</span>\r\n        )}\r\n      </div>\r\n      <div className=\"group\">\r\n        <span>Group Video Call</span>\r\n        {event.group && <span>{event.group?.name}</span>}\r\n        {event.group?._id && (\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={`/videoCall/${event.group._id}`}\r\n          >\r\n            <VideocamIcon />\r\n          </a>\r\n        )}\r\n      </div>\r\n      <div className=\"users\">\r\n        <span>Users</span>\r\n        <div>\r\n          {event.users &&\r\n            event.users?.map((item) => (\r\n              <span key={item?._id}>{item?.username}</span>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <span>Creator</span>\r\n        {event.creator && <span>{event.creator?.username}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport {\r\n  Button,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Dialog,\r\n} from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport { callApi } from \"helpers/apiCall\";\r\nimport { EventInTable } from \"components/calendar/EventInTable\";\r\nimport \"style/calendar/calendarForm.css\";\r\nimport { CalendarContext } from \"context/CalendarContext\";\r\n\r\nexport const ShowEvent = () => {\r\n  const {\r\n    setEvents,\r\n    setEditOpen,\r\n    selectedEvent,\r\n    setSelectedEvent,\r\n    detailsOpen,\r\n    setDetailsOpen,\r\n  } = useContext(CalendarContext);\r\n  const { user } = useContext(AuthContext);\r\n  const [event, setEvent] = useState(null);\r\n  const [confirmDialog, setConfirmDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedEvent) {\r\n      getEvent(selectedEvent);\r\n    }\r\n  }, [selectedEvent, detailsOpen]);\r\n\r\n  const getEvent = async (id) => callApi(`/event/get/${id}`, \"GET\", setEvent);\r\n\r\n  const deleteEvent = async () => {\r\n    if (!event?._id || user?.id !== event?.creator?._id) {\r\n      return;\r\n    }\r\n    callApi(`/event/delete/${event._id}`, \"DELETE\", deleteCallback);\r\n  };\r\n\r\n  const deleteCallback = () => {\r\n    setEvents((prev) => prev.filter((item) => item._id !== event._id));\r\n    setSelectedEvent(null);\r\n    toast.success(\"Success\");\r\n    setConfirmDialog(false);\r\n    setDetailsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={detailsOpen}\r\n        onClose={() => setDetailsOpen(false)}\r\n        fullWidth\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Details Event</DialogTitle>\r\n        <DialogContent>{event && <EventInTable event={event} />}</DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDetailsOpen(false)} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          {user?.id === event?.creator?._id ? (\r\n            <>\r\n              <Button color=\"primary\" onClick={() => setEditOpen(true)}>\r\n                Edit\r\n              </Button>\r\n              <Button color=\"primary\" onClick={() => setConfirmDialog(true)}>\r\n                Delete\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={confirmDialog}\r\n        onClose={() => setConfirmDialog(false)}\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Are you sure?</DialogTitle>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={deleteEvent}>\r\n            Delete\r\n          </Button>\r\n          <Button color=\"primary\" onClick={() => setConfirmDialog(false)}>\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Button,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Dialog,\r\n} from \"@material-ui/core\";\r\nimport { MultiSelect } from \"components/formComponents/MultiSelect\";\r\nimport { callApi } from \"helpers/apiCall\";\r\nimport format from \"date-fns/format\";\r\nimport { Select } from \"components/formComponents/Select\";\r\nimport { Input } from \"components/formComponents/Input\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"style/calendar/calendarForm.css\";\r\nimport { CalendarContext } from \"context/CalendarContext\";\r\nimport { formDefaultValues } from \"components/calendar/formDefaultValues\";\r\n\r\nexport const EditEvent = () => {\r\n  const {\r\n    setEvents,\r\n    editOpen,\r\n    setEditOpen,\r\n    setDetailsOpen,\r\n    selectedEvent,\r\n    setSelectedEvent,\r\n    usersList,\r\n    groups,\r\n  } = useContext(CalendarContext);\r\n  const { url } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { handleSubmit, errors, register, control, setValue } = useForm({\r\n    defaultValues: formDefaultValues,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectedEvent) {\r\n      getEvent(selectedEvent);\r\n    }\r\n  }, [selectedEvent, editOpen]);\r\n\r\n  const getEvent = async (id) =>\r\n    callApi(`/event/get/${id}`, \"GET\", getEventCallBack);\r\n\r\n  const editEvent = async (props) => {\r\n    const { title, description, start, end, groupId, users } = props;\r\n    setLoading(true);\r\n\r\n    callApi(`/event/edit`, \"POST\", editEventCallBack, {\r\n      id: selectedEvent,\r\n      title,\r\n      description,\r\n      start: new Date(start).toISOString(),\r\n      end: end ? new Date(end).toISOString() : null,\r\n      group: groupId ? groupId : null,\r\n      users: users ? users.map((item) => item._id) : [],\r\n    });\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getEventCallBack = ({\r\n    title,\r\n    description,\r\n    start,\r\n    end,\r\n    users,\r\n    group,\r\n  }) => {\r\n    setValue(\"title\", title, { shouldDirty: true, shouldValidate: true });\r\n    setValue(\"description\", description);\r\n    setValue(\"start\", format(new Date(start), \"yyyy-MM-dd'T'k:mm\"));\r\n    setValue(\"end\", end ? format(new Date(end), \"yyyy-MM-dd'T'k:mm\") : \"\");\r\n    setValue(\"users\", users ? users : []);\r\n    setValue(\"groupId\", group ? group._id : \"\");\r\n  };\r\n\r\n  const editEventCallBack = (data) => {\r\n    setEvents((prev) =>\r\n      prev.map((item) => {\r\n        if (item._id === data._id) {\r\n          item = data;\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n    setSelectedEvent(null);\r\n    setEditOpen(false);\r\n    setDetailsOpen(false);\r\n    toast.success(\"Success\");\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={editOpen}\r\n      onClose={() => {\r\n        setEditOpen(false);\r\n        setSelectedEvent(null);\r\n      }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Edit Event</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(editEvent)}>\r\n          <Input\r\n            name=\"title\"\r\n            control={control}\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            errors={errors}\r\n            rules={{\r\n              required: \"Required\",\r\n              minLength: {\r\n                value: 5,\r\n                message: \"Min length is 5\",\r\n              },\r\n            }}\r\n          />\r\n          <Input\r\n            name=\"description\"\r\n            control={control}\r\n            type=\"text\"\r\n            label=\"Description\"\r\n            errors={errors}\r\n            rules={{\r\n              required: false,\r\n            }}\r\n          />\r\n          <Input\r\n            name=\"start\"\r\n            control={control}\r\n            type=\"datetime-local\"\r\n            label=\"*Begin date\"\r\n            errors={errors}\r\n            rules={{\r\n              required: \"Required\",\r\n            }}\r\n          />\r\n          <Input\r\n            name=\"end\"\r\n            control={control}\r\n            type=\"datetime-local\"\r\n            label=\"End date\"\r\n            errors={errors}\r\n            rules={{\r\n              required: false,\r\n            }}\r\n            inputLabelProps={{ shrink: true }}\r\n          />\r\n\r\n          <Select\r\n            list={groups}\r\n            optionTitle=\"name\"\r\n            label=\"select group\"\r\n            errors={errors}\r\n            rules={{\r\n              required: false,\r\n            }}\r\n            name=\"groupId\"\r\n            optionValue=\"_id\"\r\n            control={control}\r\n            setValue={setValue}\r\n          />\r\n          <MultiSelect\r\n            list={usersList}\r\n            optionTitle=\"username\"\r\n            label=\"select users\"\r\n            placeholder=\"select users\"\r\n            errors={errors}\r\n            name=\"users\"\r\n            validatorRef={register({\r\n              required: false,\r\n            })}\r\n            control={control}\r\n            setValue={setValue}\r\n          />\r\n\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                setEditOpen(false);\r\n                setSelectedEvent(null);\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              Close\r\n            </Button>\r\n\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Edit {loading ? \"...\" : null}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Layout } from \"components/Layout\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport { CreateEvent } from \"components/calendar/Create\";\r\nimport { ShowEvent } from \"components/calendar/Show\";\r\nimport { EditEvent } from \"components/calendar/Edit\";\r\nimport { CalendarContext } from \"context/CalendarContext\";\r\nimport \"style/calendar/calendar.css\";\r\n\r\nexport const CalendarWrapper = () => {\r\n  const {\r\n    events,\r\n    setCreateOpen,\r\n    setSelectedEvent,\r\n    setDetailsOpen,\r\n  } = useContext(CalendarContext);\r\n  const isDesktopOrLaptop = useMediaQuery({ minWidth: 800 });\r\n\r\n  const customButton = {\r\n    custom: {\r\n      text: \"Add event\",\r\n      click: () => setCreateOpen(true),\r\n    },\r\n  };\r\n\r\n  const onClickEvent = (e) => {\r\n    setSelectedEvent(e.event.extendedProps._id);\r\n    setDetailsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div id=\"calendar\">\r\n        <FullCalendar\r\n          plugins={[dayGridPlugin]}\r\n          displayEventEnd={true}\r\n          displayEventTime={true}\r\n          eventClick={onClickEvent}\r\n          eventTimeFormat={{\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            hour12: false,\r\n          }}\r\n          eventDisplay={\"block\"}\r\n          initialView={isDesktopOrLaptop ? \"dayGridMonth\" : \"dayGridDay\"}\r\n          height=\"90vh\"\r\n          customButtons={customButton}\r\n          headerToolbar={{\r\n            center: \"custom\",\r\n            right: \"prev,next,today,dayGridDay,dayGridWeek,dayGridMonth\",\r\n          }}\r\n          events={events}\r\n        />\r\n      </div>\r\n\r\n      <CreateEvent />\r\n      <ShowEvent />\r\n      <EditEvent />\r\n    </Layout>\r\n  );\r\n};\r\n","import { CalendarWrapper } from \"components/calendar/CalendarWrapper\";\r\nimport { CalendarContextProvider } from \"context/CalendarContext\";\r\n\r\nexport const Calendar = () => {\r\n  return (\r\n    <CalendarContextProvider>\r\n      <CalendarWrapper />\r\n    </CalendarContextProvider>\r\n  );\r\n};\r\n","import format from \"date-fns/format\";\r\n\r\nexport const columns = [\r\n  { field: \"id\", headerName: \"Id\", hide: true },\r\n  { field: \"name\", headerName: \"Name\", flex: 2 },\r\n  { field: \"type\", headerName: \"Type\", flex: 1 },\r\n  {\r\n    field: \"uploadDate\",\r\n    headerName: \"Upload date\",\r\n    flex: 1,\r\n    valueGetter: (element) =>\r\n      format(new Date(element.value), \"yyyy-MM-dd' 'k:mm\"),\r\n  },\r\n  {\r\n    field: \"size\",\r\n    headerName: \"Size\",\r\n    flex: 1,\r\n    valueGetter: (element) =>\r\n      (parseInt(element.value) / 1024 / 1024).toFixed(2) + \" MB\",\r\n  },\r\n];\r\n","import {\r\n  Button,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Dialog,\r\n} from \"@material-ui/core\";\r\nimport \"style/files/uploadDialog.css\";\r\nexport const UploadDialog = ({ open, setOpen, fileRef, upload }) => {\r\n  return (\r\n    <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\r\n      <DialogTitle>Upload file</DialogTitle>\r\n      <DialogContent>\r\n        <input className=\"upload\" ref={fileRef} type=\"file\" />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setOpen(false)} color=\"primary\">\r\n          Close\r\n        </Button>\r\n        <Button type=\"submit\" color=\"primary\" onClick={upload}>\r\n          Upload\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { Layout } from \"components/Layout\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { apiDownload, callApi, swrCall } from \"helpers/apiCall\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { columns } from \"components/files/columns\";\r\nimport useSWR from \"swr\";\r\nimport { UploadDialog } from \"components/files/UploadDialog\";\r\nimport \"style/files/index.css\";\r\nexport const Files = () => {\r\n  const { url } = useContext(AuthContext);\r\n  const [selection, setSelection] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const fileRef = useRef(null);\r\n\r\n  const itemsInTable = 10;\r\n\r\n  useSWR(`/file/list`, swrCall, {\r\n    onSuccess: (e) => setFiles(e),\r\n    refreshInterval: 10000,\r\n  });\r\n\r\n  const deleteFiles = () =>\r\n    callApi(`/file/delete`, \"POST\", deleteCallback, {\r\n      ids: selection,\r\n    });\r\n\r\n  const downloadFiles = () => apiDownload(`/file/download`, { ids: selection });\r\n\r\n  const upload = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", fileRef.current.files[0]);\r\n\r\n    callApi(`/file/upload`, \"POST\", uploadCallback, data, {\r\n      \"Contetnt-Type\": \"multipart/form-data\",\r\n    });\r\n  };\r\n\r\n  const uploadCallback = (data) => {\r\n    setFiles((prev) => [...prev, data]);\r\n    toast.success(\"Success\");\r\n    setOpen(false);\r\n  };\r\n\r\n  const deleteCallback = (data) => {\r\n    toast.success(\"Success\");\r\n    const list = data.ids ? data.ids : selection;\r\n    setFiles((prev) => prev.filter((item) => !list.includes(item._id)));\r\n    setSelection([]);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"files-buttons\">\r\n        {selection.length > 0 && (\r\n          <>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={downloadFiles}>\r\n              Download\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={deleteFiles}>\r\n              Delete\r\n            </Button>\r\n          </>\r\n        )}\r\n\r\n        <Button\r\n          onClick={() => setOpen(true)}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Upload\r\n        </Button>\r\n      </div>\r\n\r\n      <DataGrid\r\n        autoHeight={true}\r\n        onSelectionModelChange={(e) => setSelection(e.selectionModel)}\r\n        rows={files}\r\n        columns={columns}\r\n        pageSize={itemsInTable}\r\n        checkboxSelection\r\n        pagination\r\n      />\r\n\r\n      <UploadDialog\r\n        open={open}\r\n        setOpen={setOpen}\r\n        fileRef={fileRef}\r\n        upload={upload}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { authCall } from \"helpers/apiCall\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const CreateAccount = () => {\r\n  const { handleSubmit, errors, register } = useForm({\r\n    mode: \"all\",\r\n    shouldUnregister: false,\r\n  });\r\n  const [message, setMessage] = useState(null);\r\n  const { url } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [role, setRole] = useState(2);\r\n\r\n  const formElementPadding = 1;\r\n  const formTitlePadding = 2;\r\n\r\n  const addUser = async ({ email, username, password }) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await authCall(`/register`, \"POST\", {\r\n        email,\r\n        username,\r\n        password,\r\n        role,\r\n      });\r\n\r\n      setMessage({ status: \"success\", text: res.data });\r\n    } catch (err) {\r\n      err?.response?.data?.error\r\n        ? setMessage({ status: \"error\", text: err.response.data.error })\r\n        : setMessage({ status: \"error\", text: err.message });\r\n\r\n      console.error(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(addUser)} style={{ width: \"100%\" }}>\r\n      <Box py={formTitlePadding}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Create new account\r\n        </Typography>\r\n      </Box>\r\n      <Box py={formElementPadding}>\r\n        <TextField\r\n          name=\"username\"\r\n          label=\"username\"\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          defaultValue=\"\"\r\n          fullWidth={true}\r\n          inputRef={register({\r\n            required: \"Required\",\r\n          })}\r\n          error={!!errors.username}\r\n          helperText={errors.username?.message}\r\n        />\r\n      </Box>\r\n      <Box py={formElementPadding}>\r\n        <TextField\r\n          name=\"email\"\r\n          label=\"email\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          autoComplete=\"email\"\r\n          fullWidth={true}\r\n          defaultValue=\"\"\r\n          inputRef={register({\r\n            required: \"Required\",\r\n            pattern: {\r\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n              message: \"invalid email address\",\r\n            },\r\n          })}\r\n          error={!!errors.email}\r\n          helperText={errors.email?.message}\r\n        />\r\n      </Box>\r\n      <Box py={formElementPadding}>\r\n        <TextField\r\n          className=\"password\"\r\n          name=\"password\"\r\n          label=\"password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          defaultValue=\"\"\r\n          fullWidth={true}\r\n          inputRef={register({\r\n            required: \"Required\",\r\n          })}\r\n          error={!!errors.password}\r\n          helperText={errors.password?.message}\r\n        />\r\n      </Box>\r\n      <Box py={formElementPadding}>\r\n        <FormControl fullWidth={true} variant=\"outlined\">\r\n          <InputLabel htmlFor=\"role\">Role</InputLabel>\r\n          <Select\r\n            value={role}\r\n            variant=\"outlined\"\r\n            label=\"role\"\r\n            name=\"role\"\r\n            id=\"role\"\r\n            onChange={(e) => setRole(e.target.value)}\r\n          >\r\n            <MenuItem value={2} selected={true}>\r\n              User\r\n            </MenuItem>\r\n            <MenuItem value={1}>Menager</MenuItem>\r\n            <MenuItem value={0}>Admin</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n      {message ? (\r\n        <Box py={formElementPadding}>\r\n          <Alert className=\"alert\" severity={message.status}>\r\n            {message.text}\r\n          </Alert>\r\n        </Box>\r\n      ) : null}\r\n      <Box py={formElementPadding}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          value=\"add user\"\r\n          fullWidth={true}\r\n        >\r\n          create account {loading ? \"...\" : null}\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { authCall } from \"helpers/apiCall\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { Button, TextField, Box, Typography } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const ResetPassword = () => {\r\n  const { handleSubmit, errors, register } = useForm({\r\n    mode: \"all\",\r\n    shouldUnregister: false,\r\n  });\r\n  const { url } = useContext(AuthContext);\r\n  const [message, setMessage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const formElementPadding = 1;\r\n  const formTitlePadding = 2;\r\n\r\n  const resetPassword = async ({ oldPassword, newPassword }) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await authCall(`resetPassword`, \"POST\", {\r\n        oldPassword,\r\n        newPassword,\r\n      });\r\n\r\n      setMessage({ status: \"success\", text: res.data });\r\n    } catch (err) {\r\n      err?.response?.data?.error\r\n        ? setMessage({ status: \"error\", text: err.response.data.error })\r\n        : setMessage({ status: \"error\", text: err.message });\r\n      console.error(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(resetPassword)} style={{ width: \"100%\" }}>\r\n      <Box py={formTitlePadding}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Reset password\r\n        </Typography>\r\n      </Box>\r\n      <Box py={formElementPadding}>\r\n        <TextField\r\n          name=\"oldPassword\"\r\n          label=\"old password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          autoComplete=\"current-password\"\r\n          defaultValue=\"\"\r\n          fullWidth={true}\r\n          inputRef={register({\r\n            required: \"Required\",\r\n          })}\r\n          error={!!errors.oldPassword}\r\n          helperText={errors.oldPassword?.message}\r\n        />\r\n      </Box>\r\n      <Box py={formElementPadding}>\r\n        <TextField\r\n          name=\"newPassword\"\r\n          label=\"new password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          defaultValue=\"\"\r\n          fullWidth={true}\r\n          inputRef={register({\r\n            required: \"Required\",\r\n          })}\r\n          error={!!errors.newPassword}\r\n          helperText={errors.newPassword?.message}\r\n        />\r\n      </Box>\r\n\r\n      {message ? (\r\n        <Box py={formElementPadding}>\r\n          <Alert className=\"alert\" severity={message.status}>\r\n            {message.text}\r\n          </Alert>\r\n        </Box>\r\n      ) : null}\r\n      <Box py={formElementPadding}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          fullWidth={true}\r\n        >\r\n          reset password {loading ? \"...\" : null}\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Layout } from \"components/Layout\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  Button,\r\n  Box,\r\n  Switch,\r\n  Typography,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { CreateAccount } from \"components/account/CreateAccount\";\r\nimport { ResetPassword } from \"components/account/ResetPassword\";\r\n\r\nexport const Account = () => {\r\n  const history = useHistory();\r\n  const { setTheme, theme, user } = useContext(AuthContext);\r\n\r\n  const formPadding = 4;\r\n  const formTitlePadding = 2;\r\n\r\n  return (\r\n    <Layout>\r\n      <Box\r\n        className=\"account\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box p={formTitlePadding}>\r\n          <Typography variant=\"h3\" component=\"h1\">\r\n            Welcome, {user?.username}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box\r\n          display=\"flex\"\r\n          flexWrap=\"wrap\"\r\n          justifyContent=\"space-around\"\r\n          alignItems=\"start\"\r\n          width=\"100%\"\r\n        >\r\n          {parseInt(user?.role) !== 0 ? null : (\r\n            <Box\r\n              p={formPadding}\r\n              display=\"flex\"\r\n              width=\"50%\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <CreateAccount></CreateAccount>\r\n            </Box>\r\n          )}\r\n\r\n          <Box\r\n            p={formPadding}\r\n            display=\"flex\"\r\n            width=\"50%\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <ResetPassword></ResetPassword>\r\n          </Box>\r\n        </Box>\r\n        <Box m={4}>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                onChange={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\r\n                checked={theme === \"light\" ? false : true}\r\n              />\r\n            }\r\n            label=\"Dark theme\"\r\n          />\r\n        </Box>\r\n        <Box m={4}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => history.push(\"/logout\")}\r\n          >\r\n            LOGOUT\r\n            <Box ml={2}>\r\n              <FontAwesomeIcon icon={faSignOutAlt} />\r\n            </Box>\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport { authCall } from \"../helpers/apiCall\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../style/login.css\";\r\n\r\nexport const Login = () => {\r\n  const { handleSubmit, errors, control } = useForm({\r\n    mode: \"all\",\r\n    shouldUnregister: false,\r\n  });\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const history = useHistory();\r\n  const { url, setUser } = useContext(AuthContext);\r\n\r\n  const onSubmit = async ({ email, password }) => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      return setMessage(\"Incorrect email or password\");\r\n    }\r\n    try {\r\n      const res = await authCall(`/login`, \"POST\", { email, password });\r\n\r\n      const { status, data } = res;\r\n      if (status === 200 && data.username && data.role) {\r\n        setUser(data);\r\n        Cookies.set(\"user\", JSON.stringify(data), { expires: 14 });\r\n        Cookies.set(\"token\", data.token, { expires: 14 });\r\n        history.push(\"/\");\r\n      }\r\n    } catch (err) {\r\n      err?.response?.data?.error\r\n        ? setMessage(err?.response?.data?.error)\r\n        : setMessage(err.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <Typography className=\"icon\" variant=\"h2\" component=\"span\">\r\n        <FontAwesomeIcon icon={faLock} />\r\n      </Typography>\r\n      <Typography className=\"title\" variant=\"h3\" component=\"h1\">\r\n        Sign In\r\n      </Typography>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Controller\r\n          as={TextField}\r\n          className=\"email\"\r\n          name=\"email\"\r\n          label=\"email\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          autoComplete=\"email\"\r\n          defaultValue={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          control={control}\r\n          error={!!errors.email}\r\n          helperText={errors.email?.message}\r\n          rules={{\r\n            required: \"Required\",\r\n            pattern: {\r\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n              message: \"invalid email address\",\r\n            },\r\n          }}\r\n        />\r\n\r\n        <Controller\r\n          as={TextField}\r\n          className=\"password\"\r\n          name=\"password\"\r\n          label=\"password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          autoComplete=\"current-password\"\r\n          defaultValue={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          control={control}\r\n          error={!!errors.password}\r\n          helperText={errors.password?.message}\r\n          rules={{\r\n            required: \"Required\",\r\n          }}\r\n        />\r\n\r\n        {message ? (\r\n          <Alert className=\"alert\" severity=\"success\" color=\"error\">\r\n            {message}\r\n          </Alert>\r\n        ) : null}\r\n\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"login\">\r\n          Login {loading ? \"...\" : null}\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHamburger } from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport { authCall } from \"../helpers/apiCall\";\r\nimport \"../style/logout.css\";\r\n\r\nexport const Logout = () => {\r\n  const history = useHistory();\r\n  const { url, setUser } = useContext(AuthContext);\r\n\r\n  const logout = () => {\r\n    authCall(`/logout`, \"GET\");\r\n    setUser(null);\r\n    Cookies.remove(\"user\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    logout();\r\n  }, [,]);\r\n\r\n  return (\r\n    <div className=\"logout\">\r\n      <FontAwesomeIcon icon={faHamburger} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const GroupContext = createContext();\r\n\r\nexport const GroupContextProvider = ({ children }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [groupMobile, setGroupMobile] = useState(null);\r\n  const [groupDesktop, setGroupDesktop] = useState(null);\r\n  const [desktopInitScroll, setDesktopInitScroll] = useState(true);\r\n\r\n  return (\r\n    <GroupContext.Provider\r\n      value={{\r\n        open,\r\n        setOpen,\r\n        groupMobile,\r\n        setGroupMobile,\r\n        groupDesktop,\r\n        setGroupDesktop,\r\n        desktopInitScroll,\r\n        setDesktopInitScroll,\r\n      }}\r\n    >\r\n      {children}\r\n    </GroupContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useState } from \"react\";\r\nimport { swrCall } from \"../helpers/apiCall\";\r\nimport useSWR from \"swr\";\r\n\r\nexport const GroupListContext = createContext();\r\n\r\nexport const GroupListContextProvider = ({ children }) => {\r\n  const [groupList, setGroupList] = useState([]);\r\n  const [searchingPhrase, setSearchingPhrase] = useState(\"\");\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const { data } = useSWR(`/group/getListWithNotification`, swrCall, {\r\n    onSuccess: (e) => (isSearching ? null : setGroupList(e)),\r\n    refreshInterval: 5000,\r\n  });\r\n\r\n  const searchGroup = (phrase) => {\r\n    setSearchingPhrase(phrase);\r\n    const result = data.filter((element) =>\r\n      element.group.name.includes(phrase)\r\n    );\r\n    setGroupList(result);\r\n  };\r\n\r\n  return (\r\n    <GroupListContext.Provider\r\n      value={{\r\n        groupList,\r\n        setGroupList,\r\n        searchGroup,\r\n        setIsSearching,\r\n        searchingPhrase,\r\n        setSearchingPhrase,\r\n      }}\r\n    >\r\n      {children}\r\n    </GroupListContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { GroupContext } from \"context/GroupContext\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  DialogTitle,\r\n  DialogContentText,\r\n  DialogContent,\r\n  DialogActions,\r\n  Dialog,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { callApi } from \"helpers/apiCall\";\r\nimport { GroupListContext } from \"context/GroupListContext\";\r\n\r\nexport const CreateGroup = () => {\r\n  const { url } = useContext(AuthContext);\r\n  const { open, setOpen, setGroupMobile, setGroupDesktop } = useContext(\r\n    GroupContext\r\n  );\r\n  const { setGroupList, groupList } = useContext(GroupListContext);\r\n  const [users, setUsers] = useState(null);\r\n  const [name, setName] = useState(null);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllUsers();\r\n    return setUsers([]);\r\n  }, [,]);\r\n\r\n  const createGroup = async () => {\r\n    const userIds = users?.map((user) => user.id);\r\n    if (!userIds) {\r\n      return;\r\n    }\r\n    callApi(`/group/create`, \"POST\", createCallback, {\r\n      users: userIds,\r\n      name,\r\n    });\r\n  };\r\n  const getAllUsers = () => callApi(`/users`, \"GET\", setAllUsers);\r\n\r\n  const createCallback = (data) => {\r\n    setGroupList([{ group: data, notSeenMessages: 0 }, ...groupList]);\r\n    setGroupDesktop(data);\r\n    setGroupMobile(data);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\r\n      <DialogTitle id=\"form-dialog-title\">Create Group</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Select group users.</DialogContentText>\r\n        <Box py={1}>\r\n          <Autocomplete\r\n            multiple\r\n            options={allUsers}\r\n            getOptionLabel={(option) => option.username}\r\n            filterSelectedOptions\r\n            fullWidth={true}\r\n            onChange={(e, value) => setUsers(value)}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"select users\"\r\n                placeholder=\"select users\"\r\n              />\r\n            )}\r\n          />\r\n        </Box>\r\n        <Box py={1}>\r\n          <TextField\r\n            name=\"group name\"\r\n            label=\"group name\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            defaultValue=\"\"\r\n            fullWidth={true}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setOpen(false)} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={createGroup} color=\"primary\">\r\n          Create\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { TextField, Avatar, Badge } from \"@material-ui/core\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { GroupContext } from \"context/GroupContext\";\r\nimport { GroupListContext } from \"context/GroupListContext\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\nimport \"style/conversation/desktop/conversations.css\";\r\n\r\nexport const GroupList = () => {\r\n  const {\r\n    groupDesktop,\r\n    setGroupDesktop,\r\n    setOpen,\r\n    setDesktopInitScroll,\r\n  } = useContext(GroupContext);\r\n  const {\r\n    groupList,\r\n    searchGroup,\r\n    setIsSearching,\r\n    searchingPhrase,\r\n    setSearchingPhrase,\r\n  } = useContext(GroupListContext);\r\n\r\n  useEffect(() => {\r\n    if (!groupDesktop && groupList?.length > 0) {\r\n      setGroupDesktop(groupList[0].group);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        className=\"conversation-search\"\r\n        placeholder=\"find conversation\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        size=\"small\"\r\n        value={searchingPhrase}\r\n        onChange={(e) => {\r\n          if (e.target.value === \"\") {\r\n            setIsSearching(false);\r\n            setSearchingPhrase(\"\");\r\n          } else {\r\n            setIsSearching(true);\r\n            searchGroup(e.target.value);\r\n          }\r\n        }}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <span>\r\n              <AddCircle\r\n                className=\"conversation-search-icon\"\r\n                color=\"primary\"\r\n                fontSize=\"small\"\r\n                onClick={() => setOpen(true)}\r\n              />\r\n            </span>\r\n          ),\r\n        }}\r\n      ></TextField>\r\n      <div className=\"desktop-conversations-container\">\r\n        {groupList?.map(({ notSeenMessages, group: element }) => (\r\n          <div\r\n            className={`${\r\n              groupDesktop?._id === element._id ? \"conversation-active\" : \"\"\r\n            } conversations-item`}\r\n            key={element._id}\r\n          >\r\n            <div\r\n              className=\"conversation-item-text-container\"\r\n              onClick={() => {\r\n                setDesktopInitScroll(true);\r\n                setGroupDesktop(element);\r\n              }}\r\n            >\r\n              {notSeenMessages > 0 ? (\r\n                <Badge\r\n                  max={99}\r\n                  badgeContent={notSeenMessages}\r\n                  color=\"primary\"\r\n                  anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                >\r\n                  <Avatar>\r\n                    {element.users.length > 2 ? <GroupIcon /> : null}\r\n                  </Avatar>\r\n                </Badge>\r\n              ) : (\r\n                <Avatar>\r\n                  {element.users.length > 2 ? <GroupIcon /> : null}\r\n                </Avatar>\r\n              )}\r\n\r\n              <span className=\"conversation-item-text\">{element.name}</span>\r\n            </div>\r\n            {/* <Link */}\r\n            <a\r\n              className=\"conversation-video-link\"\r\n              href={`/remoTalky.client/#/videoCall/${element._id}`}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              // to={`/videoCall/${element._id}`}\r\n            >\r\n              <VideocamIcon />\r\n            </a>\r\n            {/* </Link> */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { Tooltip } from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { GroupContext } from \"context/GroupContext\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport \"style/conversation/message.css\";\r\nexport const Message = ({ message, type }) => {\r\n  const { user } = useContext(AuthContext);\r\n  const { groupMobile, groupDesktop } = useContext(GroupContext);\r\n  const [groupUsers, setGroupUsers] = useState([]);\r\n  const seenUsers = groupUsers.filter(\r\n    (item) => message.seen.includes(item._id) && message.user._id !== item._id\r\n  );\r\n  const iconsMarkAsSeen = message.seen.filter((item) => item !== user.id);\r\n\r\n  useEffect(() => {\r\n    type === \"mobile\"\r\n      ? setGroupUsers(groupMobile.users)\r\n      : setGroupUsers(groupDesktop.users);\r\n  }, [,]);\r\n\r\n  return (\r\n    <span\r\n      className={`${\r\n        message.user._id === user.id ? \"message-right\" : \"message-left\"\r\n      } message-container`}\r\n      key={message._id}\r\n    >\r\n      {iconsMarkAsSeen?.length > 0 && message.user._id === user.id ? (\r\n        <span className=\"message-icons\">\r\n          {iconsMarkAsSeen.map((e) => (\r\n            <DoneIcon key={e} />\r\n          ))}\r\n        </span>\r\n      ) : null}\r\n      <Tooltip\r\n        enterTouchDelay={10}\r\n        placement={message.user._id === user.id ? \"left\" : \"right\"}\r\n        title={\r\n          <span className=\"message-tooltip\">\r\n            <span>{new Date(message.createDate).toLocaleString()}</span>\r\n            <span>From {message.user.username}</span>\r\n            <span>Seen: {seenUsers.map((e) => e.username + \" \")}</span>\r\n          </span>\r\n        }\r\n      >\r\n        <span\r\n          className={`${\r\n            message.user._id === user.id ? \"message-dark\" : \"message-light\"\r\n          } message-text`}\r\n        >\r\n          <span>{message.text}</span>\r\n        </span>\r\n      </Tooltip>\r\n      {iconsMarkAsSeen?.length > 0 && message.user._id !== user.id ? (\r\n        <span className=\"message-icons\">\r\n          {iconsMarkAsSeen.map((e) => (\r\n            <DoneIcon key={e} />\r\n          ))}\r\n        </span>\r\n      ) : null}\r\n    </span>\r\n  );\r\n};\r\n","import { Snackbar } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport \"../style/toast.css\";\r\nexport const Toast = ({ type, message, closeAction }) => {\r\n  return (\r\n    <Snackbar\r\n      open\r\n      color=\"primary\"\r\n      children={\r\n        <Alert severity={type} className=\"toast\">\r\n          {message}\r\n          <IconButton aria-label=\"close\" color=\"inherit\" onClick={closeAction}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Alert>\r\n      }\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport io from \"socket.io-client\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Message } from \"components/groups/chat/Message\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { Toast } from \"components/Toast\";\r\nimport { GroupContext } from \"context/GroupContext\";\r\nimport \"style/conversation/desktop/messages.css\";\r\nimport { config } from \"config\";\r\n\r\nexport const Chat = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const { groupDesktop, desktopInitScroll, setDesktopInitScroll } = useContext(\r\n    GroupContext\r\n  );\r\n  const [socket, setSocket] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [typing, setTyping] = useState([]);\r\n  const [seenMessages, setSeenMessages] = useState(false);\r\n  const divRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const socket = io.connect(config.chatSocektUrl, {\r\n      path: \"/socket.io\",\r\n      // transports: [\"websocket\"],\r\n    });\r\n    if (groupDesktop) {\r\n      setSocket(socket);\r\n\r\n      socket.emit(\"joinGroup\", user.id, groupDesktop._id);\r\n\r\n      socket.on(\"initMessages\", (data) => {\r\n        if (data.status === \"success\") {\r\n          setMessages(data.data);\r\n        } else {\r\n          setError(data.data.name);\r\n        }\r\n      });\r\n\r\n      socket.on(\"message\", (data) => {\r\n        if (data.status === \"success\") {\r\n          setMessages((allMessages) => [...allMessages, data.data]);\r\n        } else {\r\n          setError(data.data);\r\n        }\r\n      });\r\n\r\n      socket.on(\"typing\", (data) => {\r\n        if (data.status === \"on\") {\r\n          const typingUser = groupDesktop.users.find(\r\n            (item) => item._id === data.user\r\n          );\r\n          setTyping([...typing, typingUser]);\r\n        } else {\r\n          const updateTypingUsers = typing.filter(\r\n            (item) => item._id !== data.user\r\n          );\r\n          setTyping(updateTypingUsers);\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      socket.emit(\"leaveGroup\");\r\n    };\r\n  }, [groupDesktop]);\r\n\r\n  useEffect(() => {\r\n    if (desktopInitScroll) {\r\n      divRef?.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  });\r\n\r\n  useEffect(() => setSeenMessages(false), [groupDesktop]);\r\n\r\n  const addMessage = () => {\r\n    if (message !== \"\") {\r\n      socket.emit(\"message\", message, groupDesktop._id, user.id);\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n  const handleTyping = (type) => socket.emit(\"typing\", type);\r\n  const markMessagesAsSeen = () => {\r\n    if (!seenMessages) {\r\n      socket.emit(\"markMessagesAsSeen\");\r\n      setSeenMessages(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"desktop-messages\"\r\n        onScroll={() => setDesktopInitScroll(false)}\r\n      >\r\n        {messages?.length > 0\r\n          ? messages.map((element) => (\r\n              <Message key={element._id} message={element} type=\"desktop\" />\r\n            ))\r\n          : null}\r\n\r\n        <div ref={divRef} />\r\n      </div>\r\n      {typing?.map((x) => (\r\n        <span className=\"loading-dots\">{x.username}</span>\r\n      ))}\r\n      <TextField\r\n        className=\"desktop-messages-input\"\r\n        placeholder=\"type message..\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        size=\"small\"\r\n        multiline\r\n        value={message}\r\n        onBlur={() => handleTyping(\"off\")}\r\n        onFocus={() => {\r\n          markMessagesAsSeen();\r\n          handleTyping(\"on\");\r\n        }}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <SendIcon\r\n              onClick={addMessage}\r\n              style={{ cursor: \"pointer\" }}\r\n              fontSize=\"small\"\r\n              color=\"primary\"\r\n            />\r\n          ),\r\n        }}\r\n      ></TextField>\r\n      {error && (\r\n        <Toast\r\n          type=\"error\"\r\n          message={error}\r\n          closeAction={() => setError(null)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GroupList } from \"components/groups/chat/desktop/GroupList\";\r\nimport { Chat } from \"components/groups/chat/desktop/Chat\";\r\nimport { GroupContext } from \"context/GroupContext\";\r\nimport \"style/conversation/desktop/index.css\";\r\n\r\nexport const GroupsDesktop = () => {\r\n  const { groupDesktop } = useContext(GroupContext);\r\n  return (\r\n    <div className=\"conversation-desktop\">\r\n      <div className=\"desktop-conversations\">\r\n        <GroupList />\r\n      </div>\r\n      <div className=\"desktop-messages\">{groupDesktop ? <Chat /> : null}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { TextField, Avatar, Badge } from \"@material-ui/core\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { GroupContext } from \"context/GroupContext\";\r\nimport { GroupListContext } from \"context/GroupListContext\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\nimport \"style/conversation/mobile/conversations.css\";\r\n\r\nexport const GroupList = () => {\r\n  const { groupMobile, setGroupMobile, setOpen } = useContext(GroupContext);\r\n  const {\r\n    groupList,\r\n    searchGroup,\r\n    setIsSearching,\r\n    searchingPhrase,\r\n    setSearchingPhrase,\r\n  } = useContext(GroupListContext);\r\n\r\n  return (\r\n    <div className=\"mobile-conversations-container\">\r\n      <div className=\"mobile-conversations\">\r\n        {groupList?.map(({ notSeenMessages, group: element }) => (\r\n          <div\r\n            className={`${\r\n              groupMobile?._id === element._id ? \"conversation-active\" : \"\"\r\n            } conversations-item`}\r\n            key={element._id}\r\n          >\r\n            <div\r\n              className=\"conversation-item-text-container\"\r\n              onClick={() => setGroupMobile(element)}\r\n            >\r\n              {notSeenMessages > 0 ? (\r\n                <Badge\r\n                  max={99}\r\n                  badgeContent={notSeenMessages}\r\n                  color=\"primary\"\r\n                  anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                >\r\n                  <Avatar>\r\n                    {element.users.length > 2 ? <GroupIcon /> : null}\r\n                  </Avatar>\r\n                </Badge>\r\n              ) : (\r\n                <Avatar>\r\n                  {element.users.length > 2 ? <GroupIcon /> : null}\r\n                </Avatar>\r\n              )}\r\n\r\n              <span className=\"conversation-item-text\">{element.name}</span>\r\n            </div>\r\n            {/* <Link */}\r\n            <a\r\n              className=\"conversation-video-link\"\r\n              href={`/remoTalky.client/#/videoCall/${element._id}`}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              // to={`/videoCall/${element._id}`}\r\n            >\r\n              <VideocamIcon />\r\n            </a>\r\n            {/* </Link> */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <TextField\r\n        className=\"mobile-conversations-search\"\r\n        placeholder=\"find conversation\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        size=\"small\"\r\n        value={searchingPhrase}\r\n        onChange={(e) => {\r\n          if (e.target.value === \"\") {\r\n            setIsSearching(false);\r\n            setSearchingPhrase(\"\");\r\n          } else {\r\n            setIsSearching(true);\r\n            searchGroup(e.target.value);\r\n          }\r\n        }}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <span>\r\n              <AddCircle\r\n                className=\"mobile-conversations-search-icon\"\r\n                color=\"primary\"\r\n                fontSize=\"small\"\r\n                onClick={() => setOpen(true)}\r\n              />\r\n            </span>\r\n          ),\r\n        }}\r\n      ></TextField>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useContext, useState, useRef } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport io from \"socket.io-client\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { GroupContext } from \"context/GroupContext\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { Message } from \"components/groups/chat/Message\";\r\nimport \"style/conversation/mobile/messages.css\";\r\nimport { config } from \"config\";\r\n\r\nexport const Chat = () => {\r\n  const { groupMobile, setGroupMobile } = useContext(GroupContext);\r\n  const { user } = useContext(AuthContext);\r\n  const [socket, setSocket] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [typing, setTyping] = useState([]);\r\n  const [seenMessages, setSeenMessages] = useState(false);\r\n  const [initScroll, setInitScroll] = useState(true);\r\n  const divRef = useRef(null);\r\n  useEffect(() => {\r\n    const socket = io.connect(config.chatSocektUrl, {\r\n      path: \"/socket.io\",\r\n      // transports: [\"websocket\"],\r\n    });\r\n    if (groupMobile) {\r\n      setSocket(socket);\r\n\r\n      socket.emit(\"joinGroup\", user.id, groupMobile._id);\r\n\r\n      socket.on(\"initMessages\", (data) => {\r\n        if (data.status === \"success\") {\r\n          setMessages(data.data);\r\n        } else {\r\n          setError(data.data);\r\n        }\r\n      });\r\n\r\n      socket.on(\"message\", (data) => {\r\n        if (data.status === \"success\") {\r\n          console.log(data);\r\n          setMessages((allMessages) => [...allMessages, data.data]);\r\n        } else {\r\n          setError(data.data.name);\r\n        }\r\n      });\r\n\r\n      socket.on(\"typing\", (data) => {\r\n        if (data.status === \"on\") {\r\n          const typingUser = groupMobile.users.find(\r\n            (item) => item._id === data.user\r\n          );\r\n          setTyping([...typing, typingUser]);\r\n        } else {\r\n          const updateTypingUsers = typing.filter(\r\n            (item) => item._id !== data.user\r\n          );\r\n          setTyping(updateTypingUsers);\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      socket.emit(\"leaveGroup\");\r\n    };\r\n  }, [groupMobile]);\r\n\r\n  useEffect(() => {\r\n    if (initScroll) {\r\n      divRef?.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  });\r\n\r\n  const addMessage = () => {\r\n    if (message !== \"\") {\r\n      socket.emit(\"message\", message, groupMobile._id, user.id);\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n  const handleTyping = (type) => socket.emit(\"typing\", type);\r\n\r\n  const markMessagesAsSeen = () => {\r\n    if (!seenMessages) {\r\n      socket.emit(\"markMessagesAsSeen\");\r\n      setSeenMessages(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog fullScreen open={!!groupMobile} className=\"mobile-messages\">\r\n      <div className=\"mobile-messages-bar\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={() => {\r\n            setSeenMessages(false);\r\n            setGroupMobile(null);\r\n            setInitScroll(true);\r\n          }}\r\n          aria-label=\"close\"\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        {groupMobile?.name && <span>{groupMobile.name}</span>}\r\n      </div>\r\n      <div\r\n        className=\"mobile-messages-content\"\r\n        onScroll={() => setInitScroll(false)}\r\n      >\r\n        {messages?.length > 0\r\n          ? messages.map((element) => (\r\n              <Message key={element._id} message={element} type=\"mobile\" />\r\n            ))\r\n          : null}\r\n\r\n        <div ref={divRef} />\r\n      </div>\r\n      {typing?.map((x) => (\r\n        <span className=\"loading-dots\">{x.username}</span>\r\n      ))}\r\n\r\n      <TextField\r\n        className=\"mobile-messages-input\"\r\n        placeholder=\"type message..\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        multiline\r\n        value={message}\r\n        onBlur={() => handleTyping(\"off\")}\r\n        onFocus={() => {\r\n          markMessagesAsSeen();\r\n          handleTyping(\"on\");\r\n        }}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <SendIcon\r\n              onClick={addMessage}\r\n              style={{ cursor: \"pointer\" }}\r\n              fontSize=\"small\"\r\n              color=\"primary\"\r\n            />\r\n          ),\r\n        }}\r\n      ></TextField>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { GroupList } from \"components/groups/chat/mobile/GroupList\";\r\nimport { Chat } from \"components/groups/chat/mobile/Chat\";\r\nexport const GroupsMobile = () => {\r\n  return (\r\n    <>\r\n      <GroupList />\r\n      <Chat />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"components/Layout\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { CreateGroup } from \"components/groups/CreateGroup\";\r\nimport { GroupContextProvider } from \"context/GroupContext\";\r\nimport { GroupListContextProvider } from \"context/GroupListContext\";\r\nimport { GroupsDesktop } from \"components/groups/chat/desktop\";\r\nimport { GroupsMobile } from \"components/groups/chat/mobile\";\r\n\r\nexport const Groups = () => {\r\n  const isDesktopOrLaptop = useMediaQuery({ minWidth: 800 });\r\n\r\n  return (\r\n    <Layout>\r\n      <GroupContextProvider>\r\n        <GroupListContextProvider>\r\n          {isDesktopOrLaptop ? <GroupsDesktop /> : <GroupsMobile />}\r\n          <CreateGroup />\r\n        </GroupListContextProvider>\r\n      </GroupContextProvider>\r\n    </Layout>\r\n  );\r\n};\r\n","import React, {\r\n  createContext,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useContext,\r\n} from \"react\";\r\nimport { AuthContext } from \"./AuthContext\";\r\nimport io from \"socket.io-client\";\r\nimport { config } from \"config\";\r\n\r\nexport const VideoCallContext = createContext();\r\n\r\nexport const VideoCallContextProvider = ({ children }) => {\r\n  const { user } = useContext(AuthContext);\r\n  const [isConnectionSet, setIsConnectionSet] = useState(false);\r\n  const [incommingCall, setIncommingCall] = useState(null);\r\n\r\n  const socket = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.current = io.connect(config.videoSocketUlr, {\r\n      path: \"/socket.io/webrtc\",\r\n      // transports: [\"websocket\"],\r\n    });\r\n    socket.current.on(\"incomming call\", (group) => {\r\n      setIncommingCall(group);\r\n    });\r\n    return () => socket.current.emit(\"disconnect\");\r\n  }, [,]);\r\n\r\n  useEffect(() => {\r\n    if (user && !isConnectionSet) {\r\n      socket.current.emit(\"login\", user);\r\n      setIsConnectionSet(true);\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <VideoCallContext.Provider\r\n      value={{\r\n        socket,\r\n        incommingCall,\r\n        setIncommingCall,\r\n      }}\r\n    >\r\n      {children}\r\n    </VideoCallContext.Provider>\r\n  );\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\nimport \"style/groups/peerVideo.css\";\r\nexport const Video = ({ peer }) => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    peer.peer.on(\"stream\", (stream) => {\r\n      ref.current.srcObject = stream;\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"peer-container\">\r\n      <span>{peer.peer._id}</span>\r\n      <video playsInline autoPlay ref={ref} />\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useRef, useState, useContext } from \"react\";\r\nimport Peer from \"simple-peer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\r\nimport { VideoCallContext } from \"context/VideoCallContext\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { Video } from \"components/groups/videoCall/Video\";\r\nimport \"style/groups/video.css\";\r\n\r\nexport const VideoCall = () => {\r\n  const { socket, setIncommingCall } = useContext(VideoCallContext);\r\n  const { user } = useContext(AuthContext);\r\n  const [peers, setPeers] = useState([]);\r\n  const [audio, setAudio] = useState(true);\r\n  const [isMuted, setIsMuted] = useState(true);\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const { id } = useParams();\r\n  const groupId = id;\r\n\r\n  useEffect(() => {\r\n    setIncommingCall(null);\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        const microphone = stream.getAudioTracks()[0];\r\n        setAudio(microphone);\r\n        microphone.enabled = false;\r\n\r\n        userVideo.current.srcObject = stream;\r\n\r\n        socket.current.emit(\"join call\", groupId, user);\r\n\r\n        socket.current.on(\"all users\", (callUSers) => {\r\n          const peersToSet = [];\r\n          callUSers.forEach((userInGroup) => {\r\n            const peer = createPeer(\r\n              userInGroup.socketId,\r\n              socket.current.id,\r\n              stream,\r\n              userInGroup.username\r\n            );\r\n            peersRef.current.push({\r\n              peerID: userInGroup.socketId,\r\n              peer,\r\n            });\r\n            peersToSet.push({ socketId: userInGroup.socketId, peer });\r\n          });\r\n          setPeers(peersToSet);\r\n        });\r\n\r\n        socket.current.on(\"user joined\", (payload) => {\r\n          const peer = addPeer(\r\n            payload.signal,\r\n            payload.callerID,\r\n            stream,\r\n            payload.username\r\n          );\r\n          console.log(\"add peer - before set state peers\", peer);\r\n          peersRef.current.push({\r\n            peerID: payload.callerID,\r\n            peer,\r\n          });\r\n          setPeers((prevPeers) => [\r\n            ...prevPeers,\r\n            { socketId: payload.callerID, peer },\r\n          ]);\r\n        });\r\n\r\n        socket.current.on(\"receiving returned signal\", (payload) => {\r\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n          if (item) {\r\n            item.peer.signal(payload.signal);\r\n          }\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    socket.current.on(\"user left\", (socketId) => {\r\n      setPeers((prevPeers) =>\r\n        prevPeers.filter((item) => item.socketId !== socketId)\r\n      );\r\n      const disconnectedPeer = peersRef.current.find(\r\n        (item) => item.peerID === socketId\r\n      );\r\n      if (disconnectedPeer) {\r\n        disconnectedPeer.peer.destroy();\r\n      }\r\n      const currentPeers = peersRef.current.filter(\r\n        (item) => item.peerID !== socketId\r\n      );\r\n      peersRef.current = currentPeers;\r\n      setTimeout(() => console.log(peersRef.current), 2000);\r\n    });\r\n  }, [,]);\r\n\r\n  const createPeer = (userToSignal, callerID, stream, username) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n      username,\r\n    });\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.current.emit(\"sending signal\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n        username,\r\n      });\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerID, stream, username) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n      username,\r\n    });\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.current.emit(\"returning signal\", { signal, callerID });\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n  };\r\n\r\n  const muteMicrophone = () => {\r\n    audio.enabled = !audio.enabled;\r\n    setIsMuted(!audio.enabled);\r\n  };\r\n\r\n  const callAllUsersInGroup = () =>\r\n    socket.current.emit(\"call users\", groupId, user.id);\r\n\r\n  return (\r\n    <div className=\"video-container\">\r\n      <div className=\"video-peers\">\r\n        {peers.length > 0 ? (\r\n          peers.map((peer) => <Video key={peer.peer._id} peer={peer} />)\r\n        ) : (\r\n          <span>You are alone ;_;</span>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"video-bar\">\r\n        <video ref={userVideo} autoPlay playsInline className=\"user-video\" />\r\n\r\n        <div\r\n          onClick={() => {\r\n            socket.current.emit(\"leave call\", user.id);\r\n            window.close();\r\n          }}\r\n        >\r\n          <CallEndIcon />\r\n          <span>End call</span>\r\n        </div>\r\n        <div onClick={callAllUsersInGroup}>\r\n          <CallIcon />\r\n          <span>Call all users</span>\r\n        </div>\r\n        <div onClick={muteMicrophone}>\r\n          {isMuted ? <MicOffIcon /> : <MicIcon />}\r\n          <span>Microphone {isMuted ? \"off\" : \"on\"}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"../style/spinner.css\";\r\nexport const Spinner = () => (\r\n  <div className=\"spinner-container\">\r\n    <CircularProgress></CircularProgress>\r\n  </div>\r\n);\r\n","import React, { useContext } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { Spinner } from \"./Spinner\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n  useAuth();\r\n\r\n  if (user) {\r\n    return <Route {...rest} render={(props) => <Component {...props} />} />;\r\n  }\r\n  return <Spinner></Spinner>;\r\n};\r\n","import { useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport { authCall } from \"../helpers/apiCall\";\r\n\r\nexport const useAuth = () => {\r\n  const history = useHistory();\r\n  const { user, setUser } = useContext(AuthContext);\r\n\r\n  const checkToken = async () => {\r\n    try {\r\n      const res = await authCall(`/checkRole`, \"GET\");\r\n      const { status, data } = res;\r\n      if (status === 200 && data.username && data.role) {\r\n        setUser(data);\r\n        Cookies.set(\"user\", JSON.stringify(data), { expires: 14 });\r\n        Cookies.set(\"token\", data.token, { expires: 14 });\r\n      } else {\r\n        setUser(null);\r\n        history.push(\"/login\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setUser(null);\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (!user) {\r\n        const cookieUser = Cookies.get(\"user\");\r\n        if (cookieUser) {\r\n          const initialUser = JSON.parse(cookieUser);\r\n          console.log(initialUser);\r\n          initialUser ? setUser(initialUser) : checkToken();\r\n        } else {\r\n          checkToken();\r\n        }\r\n      }\r\n    }, 1000);\r\n  }, [,]);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Button, DialogTitle, DialogActions, Dialog } from \"@material-ui/core\";\r\nimport { VideoCallContext } from \"../context/VideoCallContext\";\r\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\n\r\nexport const IncommingCall = () => {\r\n  const { incommingCall, setIncommingCall } = useContext(VideoCallContext);\r\n  return (\r\n    <Dialog\r\n      open={!!incommingCall}\r\n      onClose={() => setIncommingCall(null)}\r\n      fullWidth\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">\r\n        Incomming call from group {incommingCall?.name}\r\n      </DialogTitle>\r\n      <DialogActions>\r\n        <Button\r\n          target=\"_blank\"\r\n          href={`/VideoCall/${incommingCall?._id}`}\r\n          onClick={() =>\r\n            setTimeout(() => {\r\n              setIncommingCall(null);\r\n            }, 1000)\r\n          }\r\n          color=\"primary\"\r\n        >\r\n          <CallIcon />\r\n        </Button>\r\n        <Button color=\"primary\" onClick={() => setIncommingCall(null)}>\r\n          <CallEndIcon />\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ToastContainer } from \"react-toastify\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { createTheme } from \"./style/theme\";\nimport { Home } from \"./components/Home\";\nimport { Calendar } from \"./components/calendar\";\nimport { Files } from \"./components/files\";\nimport { Account } from \"./components/account/Account\";\nimport { Login } from \"./components/Login\";\nimport { Logout } from \"./components/Logout\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport { Groups } from \"./components/groups\";\nimport { VideoCall } from \"./components/groups/videoCall/VideoCall\";\nimport { PrivateRoute } from \"./components/PrivateRoute\";\nimport { IncommingCall } from \"./components/IncommingCall\";\nimport \"style/App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const App = () => {\n  const context = useContext(AuthContext);\n  const { theme } = context;\n  const currentTheme = createTheme(theme);\n  return (\n    <ThemeProvider theme={currentTheme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <IncommingCall />\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Home} />\n          <PrivateRoute path=\"/groups\" component={Groups} />\n          <PrivateRoute path=\"/videoCall/:id\" component={VideoCall} />\n          <PrivateRoute path=\"/calendar\" component={Calendar} />\n          <PrivateRoute path=\"/files\" component={Files} />\n          <PrivateRoute path=\"/account\" component={Account} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/login\" component={Login} />\n        </Switch>\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={7000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </div>\n    </ThemeProvider>\n  );\n};\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  blue,\r\n  green,\r\n  indigo,\r\n  pink,\r\n  yellow,\r\n  orange,\r\n} from \"@material-ui/core/colors\";\r\n\r\nexport const createTheme = (type) =>\r\n  createMuiTheme({\r\n    palette: {\r\n      type,\r\n      // primary: type === \"light\" ? indigo : pink,\r\n    },\r\n    overrides: {\r\n      MuiList: {\r\n        root: {\r\n          listStyle: \"none\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"style/index.css\";\nimport { App } from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AuthContextProvider } from \"./context/AuthContext\";\nimport { VideoCallContextProvider } from \"./context/VideoCallContext\";\nimport { HashRouter as Router, BrowserHistory } from \"react-router-dom\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <AuthContextProvider>\n    <VideoCallContextProvider>\n      <Router>\n        <App />\n      </Router>\n    </VideoCallContextProvider>\n  </AuthContextProvider>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}