{"version":3,"sources":["components/Layout.jsx","components/files/columns.js","components/files/UploadDialog.jsx","components/files/index.jsx"],"names":["Layout","children","to","aria-label","icon","faCommentAlt","faCalendarAlt","faFileAlt","faCogs","columns","field","headerName","hide","flex","valueGetter","element","format","Date","value","parseInt","toFixed","UploadDialog","open","setOpen","fileRef","upload","Dialog","onClose","fullWidth","DialogTitle","DialogContent","className","ref","type","DialogActions","Button","onClick","color","Files","useContext","AuthContext","url","useState","selection","setSelection","files","setFiles","useRef","useSWR","swrCall","onSuccess","e","refreshInterval","uploadCallback","data","prev","toast","success","deleteCallback","list","ids","filter","item","includes","_id","length","variant","apiDownload","callApi","autoHeight","onSelectionModelChange","selectionModel","rows","pageSize","checkboxSelection","pagination","FormData","append","current"],"mappings":"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","file":"static/js/12.d31e020a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCogs,\r\n  faCommentAlt,\r\n  faCalendarAlt,\r\n  faFileAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../style/layout.css\";\r\n\r\nexport const Layout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/groups\" aria-label=\"groups\">\r\n              <FontAwesomeIcon icon={faCommentAlt} />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/calendar\" aria-label=\"calendar\">\r\n              <FontAwesomeIcon icon={faCalendarAlt} />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/files\" aria-label=\"files\">\r\n              <FontAwesomeIcon icon={faFileAlt} />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/account\" aria-label=\"account\">\r\n              <FontAwesomeIcon icon={faCogs} />\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <main>{children}</main>\r\n    </div>\r\n  );\r\n};\r\n","import format from \"date-fns/format\";\r\n\r\nexport const columns = [\r\n  { field: \"id\", headerName: \"Id\", hide: true },\r\n  { field: \"name\", headerName: \"Name\", flex: 2 },\r\n  { field: \"type\", headerName: \"Type\", flex: 1 },\r\n  {\r\n    field: \"uploadDate\",\r\n    headerName: \"Upload date\",\r\n    flex: 1,\r\n    valueGetter: (element) =>\r\n      format(new Date(element.value), \"yyyy-MM-dd' 'k:mm\"),\r\n  },\r\n  {\r\n    field: \"size\",\r\n    headerName: \"Size\",\r\n    flex: 1,\r\n    valueGetter: (element) =>\r\n      (parseInt(element.value) / 1024 / 1024).toFixed(2) + \" MB\",\r\n  },\r\n];\r\n","import {\r\n  Button,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Dialog,\r\n} from \"@material-ui/core\";\r\nimport \"style/files/uploadDialog.css\";\r\nexport const UploadDialog = ({ open, setOpen, fileRef, upload }) => {\r\n  return (\r\n    <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\r\n      <DialogTitle>Upload file</DialogTitle>\r\n      <DialogContent>\r\n        <input className=\"upload\" ref={fileRef} type=\"file\" />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setOpen(false)} color=\"primary\">\r\n          Close\r\n        </Button>\r\n        <Button type=\"submit\" color=\"primary\" onClick={upload}>\r\n          Upload\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { Layout } from \"components/Layout\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { apiDownload, callApi, swrCall } from \"helpers/apiCall\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { columns } from \"components/files/columns\";\r\nimport useSWR from \"swr\";\r\nimport { UploadDialog } from \"components/files/UploadDialog\";\r\nimport \"style/files/index.css\";\r\nconst Files = () => {\r\n  const { url } = useContext(AuthContext);\r\n  const [selection, setSelection] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const fileRef = useRef(null);\r\n\r\n  const itemsInTable = 10;\r\n\r\n  useSWR(`/file/list`, swrCall, {\r\n    onSuccess: (e) => setFiles(e),\r\n    refreshInterval: 10000,\r\n  });\r\n\r\n  const deleteFiles = () =>\r\n    callApi(`/file/delete`, \"POST\", deleteCallback, {\r\n      ids: selection,\r\n    });\r\n\r\n  const downloadFiles = () => apiDownload(`/file/download`, { ids: selection });\r\n\r\n  const upload = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", fileRef.current.files[0]);\r\n\r\n    callApi(`/file/upload`, \"POST\", uploadCallback, data, {\r\n      \"Contetnt-Type\": \"multipart/form-data\",\r\n    });\r\n  };\r\n\r\n  const uploadCallback = (data) => {\r\n    setFiles((prev) => [...prev, data]);\r\n    toast.success(\"Success\");\r\n    setOpen(false);\r\n  };\r\n\r\n  const deleteCallback = (data) => {\r\n    toast.success(\"Success\");\r\n    const list = data.ids ? data.ids : selection;\r\n    setFiles((prev) => prev.filter((item) => !list.includes(item._id)));\r\n    setSelection([]);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"files-buttons\">\r\n        {selection.length > 0 && (\r\n          <>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={downloadFiles}>\r\n              Download\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={deleteFiles}>\r\n              Delete\r\n            </Button>\r\n          </>\r\n        )}\r\n\r\n        <Button\r\n          onClick={() => setOpen(true)}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Upload\r\n        </Button>\r\n      </div>\r\n\r\n      <DataGrid\r\n        autoHeight={true}\r\n        onSelectionModelChange={(e) => setSelection(e.selectionModel)}\r\n        rows={files}\r\n        columns={columns}\r\n        pageSize={itemsInTable}\r\n        checkboxSelection\r\n        pagination\r\n      />\r\n\r\n      <UploadDialog\r\n        open={open}\r\n        setOpen={setOpen}\r\n        fileRef={fileRef}\r\n        upload={upload}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n"],"sourceRoot":""}