{"version":3,"sources":["components/Layout.jsx","components/account/CreateAccount.jsx","components/account/ResetPassword.jsx","components/account/Account.jsx"],"names":["Layout","children","to","aria-label","icon","faCommentAlt","faCalendarAlt","faFileAlt","faCogs","CreateAccount","useForm","mode","shouldUnregister","handleSubmit","errors","register","useState","message","setMessage","useContext","AuthContext","url","loading","setLoading","role","setRole","addUser","a","email","username","password","authCall","res","status","text","data","response","error","console","onSubmit","style","width","Box","py","Typography","variant","component","TextField","name","label","type","defaultValue","fullWidth","inputRef","required","helperText","autoComplete","pattern","value","className","FormControl","InputLabel","htmlFor","Select","id","onChange","e","target","MenuItem","selected","Alert","severity","Button","color","ResetPassword","resetPassword","oldPassword","newPassword","Account","history","useHistory","setTheme","theme","user","display","flexDirection","alignItems","p","flexWrap","justifyContent","parseInt","m","FormControlLabel","control","Switch","checked","onClick","push","ml","faSignOutAlt"],"mappings":"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","file":"static/js/17.4bcd699f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCogs,\r\n  faCommentAlt,\r\n  faCalendarAlt,\r\n  faFileAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../style/layout.css\";\r\n\r\nexport const Layout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/groups\" aria-label=\"groups\">\r\n              <FontAwesomeIcon icon={faCommentAlt} />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/calendar\" aria-label=\"calendar\">\r\n              <FontAwesomeIcon icon={faCalendarAlt} />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/files\" aria-label=\"files\">\r\n              <FontAwesomeIcon icon={faFileAlt} />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/account\" aria-label=\"account\">\r\n              <FontAwesomeIcon icon={faCogs} />\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <main>{children}</main>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { authCall } from \"helpers/apiCall\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const CreateAccount = () => {\r\n  const { handleSubmit, errors, register } = useForm({\r\n    mode: \"all\",\r\n    shouldUnregister: false,\r\n  });\r\n  const [message, setMessage] = useState(null);\r\n  const { url } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [role, setRole] = useState(2);\r\n\r\n  const formElementPadding = 1;\r\n  const formTitlePadding = 2;\r\n\r\n  const addUser = async ({ email, username, password }) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await authCall(`/register`, \"POST\", {\r\n        email,\r\n        username,\r\n        password,\r\n        role,\r\n      });\r\n\r\n      setMessage({ status: \"success\", text: res.data });\r\n    } catch (err) {\r\n      err?.response?.data?.error\r\n        ? setMessage({ status: \"error\", text: err.response.data.error })\r\n        : setMessage({ status: \"error\", text: err.message });\r\n\r\n      console.error(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(addUser)} style={{ width: \"100%\" }}>\r\n      <Box py={formTitlePadding}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Create new account\r\n        </Typography>\r\n      </Box>\r\n      <Box py={formElementPadding}>\r\n        <TextField\r\n          name=\"username\"\r\n          label=\"username\"\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          defaultValue=\"\"\r\n          fullWidth={true}\r\n          inputRef={register({\r\n            required: \"Required\",\r\n          })}\r\n          error={!!errors.username}\r\n          helperText={errors.username?.message}\r\n        />\r\n      </Box>\r\n      <Box py={formElementPadding}>\r\n        <TextField\r\n          name=\"email\"\r\n          label=\"email\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          autoComplete=\"email\"\r\n          fullWidth={true}\r\n          defaultValue=\"\"\r\n          inputRef={register({\r\n            required: \"Required\",\r\n            pattern: {\r\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n              message: \"invalid email address\",\r\n            },\r\n          })}\r\n          error={!!errors.email}\r\n          helperText={errors.email?.message}\r\n        />\r\n      </Box>\r\n      <Box py={formElementPadding}>\r\n        <TextField\r\n          className=\"password\"\r\n          name=\"password\"\r\n          label=\"password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          defaultValue=\"\"\r\n          fullWidth={true}\r\n          inputRef={register({\r\n            required: \"Required\",\r\n          })}\r\n          error={!!errors.password}\r\n          helperText={errors.password?.message}\r\n        />\r\n      </Box>\r\n      <Box py={formElementPadding}>\r\n        <FormControl fullWidth={true} variant=\"outlined\">\r\n          <InputLabel htmlFor=\"role\">Role</InputLabel>\r\n          <Select\r\n            value={role}\r\n            variant=\"outlined\"\r\n            label=\"role\"\r\n            name=\"role\"\r\n            id=\"role\"\r\n            onChange={(e) => setRole(e.target.value)}\r\n          >\r\n            <MenuItem value={2} selected={true}>\r\n              User\r\n            </MenuItem>\r\n            <MenuItem value={1}>Menager</MenuItem>\r\n            <MenuItem value={0}>Admin</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n      {message ? (\r\n        <Box py={formElementPadding}>\r\n          <Alert className=\"alert\" severity={message.status}>\r\n            {message.text}\r\n          </Alert>\r\n        </Box>\r\n      ) : null}\r\n      <Box py={formElementPadding}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          value=\"add user\"\r\n          fullWidth={true}\r\n        >\r\n          create account {loading ? \"...\" : null}\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { authCall } from \"helpers/apiCall\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { Button, TextField, Box, Typography } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const ResetPassword = () => {\r\n  const { handleSubmit, errors, register } = useForm({\r\n    mode: \"all\",\r\n    shouldUnregister: false,\r\n  });\r\n  const { url } = useContext(AuthContext);\r\n  const [message, setMessage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const formElementPadding = 1;\r\n  const formTitlePadding = 2;\r\n\r\n  const resetPassword = async ({ oldPassword, newPassword }) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await authCall(`resetPassword`, \"POST\", {\r\n        oldPassword,\r\n        newPassword,\r\n      });\r\n\r\n      setMessage({ status: \"success\", text: res.data });\r\n    } catch (err) {\r\n      err?.response?.data?.error\r\n        ? setMessage({ status: \"error\", text: err.response.data.error })\r\n        : setMessage({ status: \"error\", text: err.message });\r\n      console.error(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(resetPassword)} style={{ width: \"100%\" }}>\r\n      <Box py={formTitlePadding}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Reset password\r\n        </Typography>\r\n      </Box>\r\n      <Box py={formElementPadding}>\r\n        <TextField\r\n          name=\"oldPassword\"\r\n          label=\"old password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          autoComplete=\"current-password\"\r\n          defaultValue=\"\"\r\n          fullWidth={true}\r\n          inputRef={register({\r\n            required: \"Required\",\r\n          })}\r\n          error={!!errors.oldPassword}\r\n          helperText={errors.oldPassword?.message}\r\n        />\r\n      </Box>\r\n      <Box py={formElementPadding}>\r\n        <TextField\r\n          name=\"newPassword\"\r\n          label=\"new password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          defaultValue=\"\"\r\n          fullWidth={true}\r\n          inputRef={register({\r\n            required: \"Required\",\r\n          })}\r\n          error={!!errors.newPassword}\r\n          helperText={errors.newPassword?.message}\r\n        />\r\n      </Box>\r\n\r\n      {message ? (\r\n        <Box py={formElementPadding}>\r\n          <Alert className=\"alert\" severity={message.status}>\r\n            {message.text}\r\n          </Alert>\r\n        </Box>\r\n      ) : null}\r\n      <Box py={formElementPadding}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          fullWidth={true}\r\n        >\r\n          reset password {loading ? \"...\" : null}\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Layout } from \"components/Layout\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  Button,\r\n  Box,\r\n  Switch,\r\n  Typography,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { CreateAccount } from \"components/account/CreateAccount\";\r\nimport { ResetPassword } from \"components/account/ResetPassword\";\r\n\r\nconst Account = () => {\r\n  const history = useHistory();\r\n  const { setTheme, theme, user } = useContext(AuthContext);\r\n\r\n  const formPadding = 4;\r\n  const formTitlePadding = 2;\r\n\r\n  return (\r\n    <Layout>\r\n      <Box\r\n        className=\"account\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box p={formTitlePadding}>\r\n          <Typography variant=\"h3\" component=\"h1\">\r\n            Welcome, {user?.username}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box\r\n          display=\"flex\"\r\n          flexWrap=\"wrap\"\r\n          justifyContent=\"space-around\"\r\n          alignItems=\"start\"\r\n          width=\"100%\"\r\n        >\r\n          {parseInt(user?.role) !== 0 ? null : (\r\n            <Box\r\n              p={formPadding}\r\n              display=\"flex\"\r\n              width=\"50%\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <CreateAccount></CreateAccount>\r\n            </Box>\r\n          )}\r\n\r\n          <Box\r\n            p={formPadding}\r\n            display=\"flex\"\r\n            width=\"50%\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <ResetPassword></ResetPassword>\r\n          </Box>\r\n        </Box>\r\n        <Box m={4}>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                onChange={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\r\n                checked={theme === \"light\" ? false : true}\r\n              />\r\n            }\r\n            label=\"Dark theme\"\r\n          />\r\n        </Box>\r\n        <Box m={4}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => history.push(\"/logout\")}\r\n          >\r\n            LOGOUT\r\n            <Box ml={2}>\r\n              <FontAwesomeIcon icon={faSignOutAlt} />\r\n            </Box>\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\nexport default Account;\r\n"],"sourceRoot":""}